(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/platform-browser'), require('@angular/core'), require('devextreme/viz/bullet'), require('devextreme-angular/core'), require('devextreme-angular/ui/nested')) :
    typeof define === 'function' && define.amd ? define('devextreme-angular/ui/bullet', ['exports', '@angular/platform-browser', '@angular/core', 'devextreme/viz/bullet', 'devextreme-angular/core', 'devextreme-angular/ui/nested'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["devextreme-angular"] = global["devextreme-angular"] || {}, global["devextreme-angular"].ui = global["devextreme-angular"].ui || {}, global["devextreme-angular"].ui.bullet = {}), global.ng.platformBrowser, global.ng.core, global.DxBullet, global["devextreme-angular"].core, global["devextreme-angular"].ui.nested));
})(this, (function (exports, i2, i0, DxBullet, i1, nested) { 'use strict';

    function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var DxBullet__default = /*#__PURE__*/_interopDefaultLegacy(DxBullet);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (b.hasOwnProperty(p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    function __createBinding(o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    }
    function __exportStar(m, exports) {
        for (var p in m)
            if (p !== "default" && !exports.hasOwnProperty(p))
                exports[p] = m[p];
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    ;
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (Object.hasOwnProperty.call(mod, k))
                    result[k] = mod[k];
        result.default = mod;
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, privateMap) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to get private field on non-instance");
        }
        return privateMap.get(receiver);
    }
    function __classPrivateFieldSet(receiver, privateMap, value) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to set private field on non-instance");
        }
        privateMap.set(receiver, value);
        return value;
    }

    /**
     * The Bullet UI component is useful when you need to compare a single measure to a target value. The UI component comprises a horizontal bar indicating the measure and a vertical line indicating the target value.

     */
    var DxBulletComponent = /** @class */ (function (_super) {
        __extends(DxBulletComponent, _super);
        function DxBulletComponent(elementRef, ngZone, templateHost, _watcherHelper, optionHost, transferState, platformId) {
            var _this = _super.call(this, elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId) || this;
            _this._createEventEmitters([
                { subscribe: 'disposing', emit: 'onDisposing' },
                { subscribe: 'drawn', emit: 'onDrawn' },
                { subscribe: 'exported', emit: 'onExported' },
                { subscribe: 'exporting', emit: 'onExporting' },
                { subscribe: 'fileSaving', emit: 'onFileSaving' },
                { subscribe: 'incidentOccurred', emit: 'onIncidentOccurred' },
                { subscribe: 'initialized', emit: 'onInitialized' },
                { subscribe: 'optionChanged', emit: 'onOptionChanged' },
                { subscribe: 'tooltipHidden', emit: 'onTooltipHidden' },
                { subscribe: 'tooltipShown', emit: 'onTooltipShown' },
                { emit: 'colorChange' },
                { emit: 'disabledChange' },
                { emit: 'elementAttrChange' },
                { emit: 'endScaleValueChange' },
                { emit: 'marginChange' },
                { emit: 'pathModifiedChange' },
                { emit: 'rtlEnabledChange' },
                { emit: 'showTargetChange' },
                { emit: 'showZeroLevelChange' },
                { emit: 'sizeChange' },
                { emit: 'startScaleValueChange' },
                { emit: 'targetChange' },
                { emit: 'targetColorChange' },
                { emit: 'targetWidthChange' },
                { emit: 'themeChange' },
                { emit: 'tooltipChange' },
                { emit: 'valueChange' }
            ]);
            optionHost.setHost(_this);
            return _this;
        }
        Object.defineProperty(DxBulletComponent.prototype, "color", {
            /**
             * Specifies a color for the bullet bar.
            
             */
            get: function () {
                return this._getOption('color');
            },
            set: function (value) {
                this._setOption('color', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxBulletComponent.prototype, "disabled", {
            /**
             * Specifies whether the UI component responds to user interaction.
            
             */
            get: function () {
                return this._getOption('disabled');
            },
            set: function (value) {
                this._setOption('disabled', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxBulletComponent.prototype, "elementAttr", {
            /**
             * Specifies the global attributes to be attached to the UI component&apos;s container element.
            
             */
            get: function () {
                return this._getOption('elementAttr');
            },
            set: function (value) {
                this._setOption('elementAttr', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxBulletComponent.prototype, "endScaleValue", {
            /**
             * Specifies an end value for the invisible scale.
            
             */
            get: function () {
                return this._getOption('endScaleValue');
            },
            set: function (value) {
                this._setOption('endScaleValue', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxBulletComponent.prototype, "margin", {
            /**
             * Generates space around the UI component.
            
             */
            get: function () {
                return this._getOption('margin');
            },
            set: function (value) {
                this._setOption('margin', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxBulletComponent.prototype, "pathModified", {
            /**
             * Notifies the UI component that it is embedded into an HTML page that uses a tag modifying the path.
            
             */
            get: function () {
                return this._getOption('pathModified');
            },
            set: function (value) {
                this._setOption('pathModified', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxBulletComponent.prototype, "rtlEnabled", {
            /**
             * Switches the UI component to a right-to-left representation.
            
             */
            get: function () {
                return this._getOption('rtlEnabled');
            },
            set: function (value) {
                this._setOption('rtlEnabled', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxBulletComponent.prototype, "showTarget", {
            /**
             * Specifies whether or not to show the target line.
            
             */
            get: function () {
                return this._getOption('showTarget');
            },
            set: function (value) {
                this._setOption('showTarget', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxBulletComponent.prototype, "showZeroLevel", {
            /**
             * Specifies whether or not to show the line indicating zero on the invisible scale.
            
             */
            get: function () {
                return this._getOption('showZeroLevel');
            },
            set: function (value) {
                this._setOption('showZeroLevel', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxBulletComponent.prototype, "size", {
            /**
             * Specifies the UI component&apos;s size in pixels.
            
             */
            get: function () {
                return this._getOption('size');
            },
            set: function (value) {
                this._setOption('size', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxBulletComponent.prototype, "startScaleValue", {
            /**
             * Specifies a start value for the invisible scale.
            
             */
            get: function () {
                return this._getOption('startScaleValue');
            },
            set: function (value) {
                this._setOption('startScaleValue', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxBulletComponent.prototype, "target", {
            /**
             * Specifies the value indicated by the target line.
            
             */
            get: function () {
                return this._getOption('target');
            },
            set: function (value) {
                this._setOption('target', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxBulletComponent.prototype, "targetColor", {
            /**
             * Specifies a color for both the target and zero level lines.
            
             */
            get: function () {
                return this._getOption('targetColor');
            },
            set: function (value) {
                this._setOption('targetColor', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxBulletComponent.prototype, "targetWidth", {
            /**
             * Specifies the width of the target line.
            
             */
            get: function () {
                return this._getOption('targetWidth');
            },
            set: function (value) {
                this._setOption('targetWidth', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxBulletComponent.prototype, "theme", {
            /**
             * Sets the name of the theme the UI component uses.
            
             */
            get: function () {
                return this._getOption('theme');
            },
            set: function (value) {
                this._setOption('theme', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxBulletComponent.prototype, "tooltip", {
            /**
             * Configures the tooltip.
            
             */
            get: function () {
                return this._getOption('tooltip');
            },
            set: function (value) {
                this._setOption('tooltip', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxBulletComponent.prototype, "value", {
            /**
             * Specifies the primary value indicated by the bullet bar.
            
             */
            get: function () {
                return this._getOption('value');
            },
            set: function (value) {
                this._setOption('value', value);
            },
            enumerable: false,
            configurable: true
        });
        DxBulletComponent.prototype._createInstance = function (element, options) {
            return new DxBullet__default["default"](element, options);
        };
        DxBulletComponent.prototype.ngOnDestroy = function () {
            this._destroyWidget();
        };
        return DxBulletComponent;
    }(i1.DxComponent));
    /** @nocollapse */ DxBulletComponent.ɵfac = function DxBulletComponent_Factory(t) { return new (t || DxBulletComponent)(i0__namespace.ɵɵdirectiveInject(i0__namespace.ElementRef), i0__namespace.ɵɵdirectiveInject(i0__namespace.NgZone), i0__namespace.ɵɵdirectiveInject(i1__namespace.DxTemplateHost), i0__namespace.ɵɵdirectiveInject(i1__namespace.WatcherHelper), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost), i0__namespace.ɵɵdirectiveInject(i2__namespace.TransferState), i0__namespace.ɵɵdirectiveInject(i0.PLATFORM_ID)); };
    /** @nocollapse */ DxBulletComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxBulletComponent, selectors: [["dx-bullet"]], inputs: { color: "color", disabled: "disabled", elementAttr: "elementAttr", endScaleValue: "endScaleValue", margin: "margin", pathModified: "pathModified", rtlEnabled: "rtlEnabled", showTarget: "showTarget", showZeroLevel: "showZeroLevel", size: "size", startScaleValue: "startScaleValue", target: "target", targetColor: "targetColor", targetWidth: "targetWidth", theme: "theme", tooltip: "tooltip", value: "value" }, outputs: { onDisposing: "onDisposing", onDrawn: "onDrawn", onExported: "onExported", onExporting: "onExporting", onFileSaving: "onFileSaving", onIncidentOccurred: "onIncidentOccurred", onInitialized: "onInitialized", onOptionChanged: "onOptionChanged", onTooltipHidden: "onTooltipHidden", onTooltipShown: "onTooltipShown", colorChange: "colorChange", disabledChange: "disabledChange", elementAttrChange: "elementAttrChange", endScaleValueChange: "endScaleValueChange", marginChange: "marginChange", pathModifiedChange: "pathModifiedChange", rtlEnabledChange: "rtlEnabledChange", showTargetChange: "showTargetChange", showZeroLevelChange: "showZeroLevelChange", sizeChange: "sizeChange", startScaleValueChange: "startScaleValueChange", targetChange: "targetChange", targetColorChange: "targetColorChange", targetWidthChange: "targetWidthChange", themeChange: "themeChange", tooltipChange: "tooltipChange", valueChange: "valueChange" }, features: [i0__namespace.ɵɵProvidersFeature([
                i1.DxTemplateHost,
                i1.WatcherHelper,
                i1.NestedOptionHost
            ]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxBulletComponent_Template(rf, ctx) { }, styles: ["[_nghost-%COMP%] {  display: block; }"] });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxBulletComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'dx-bullet',
                        template: '',
                        styles: [' :host {  display: block; }'],
                        providers: [
                            i1.DxTemplateHost,
                            i1.WatcherHelper,
                            i1.NestedOptionHost
                        ]
                    }]
            }], function () {
            return [{ type: i0__namespace.ElementRef }, { type: i0__namespace.NgZone }, { type: i1__namespace.DxTemplateHost }, { type: i1__namespace.WatcherHelper }, { type: i1__namespace.NestedOptionHost }, { type: i2__namespace.TransferState }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i0.PLATFORM_ID]
                        }] }];
        }, { color: [{
                    type: i0.Input
                }], disabled: [{
                    type: i0.Input
                }], elementAttr: [{
                    type: i0.Input
                }], endScaleValue: [{
                    type: i0.Input
                }], margin: [{
                    type: i0.Input
                }], pathModified: [{
                    type: i0.Input
                }], rtlEnabled: [{
                    type: i0.Input
                }], showTarget: [{
                    type: i0.Input
                }], showZeroLevel: [{
                    type: i0.Input
                }], size: [{
                    type: i0.Input
                }], startScaleValue: [{
                    type: i0.Input
                }], target: [{
                    type: i0.Input
                }], targetColor: [{
                    type: i0.Input
                }], targetWidth: [{
                    type: i0.Input
                }], theme: [{
                    type: i0.Input
                }], tooltip: [{
                    type: i0.Input
                }], value: [{
                    type: i0.Input
                }], onDisposing: [{
                    type: i0.Output
                }], onDrawn: [{
                    type: i0.Output
                }], onExported: [{
                    type: i0.Output
                }], onExporting: [{
                    type: i0.Output
                }], onFileSaving: [{
                    type: i0.Output
                }], onIncidentOccurred: [{
                    type: i0.Output
                }], onInitialized: [{
                    type: i0.Output
                }], onOptionChanged: [{
                    type: i0.Output
                }], onTooltipHidden: [{
                    type: i0.Output
                }], onTooltipShown: [{
                    type: i0.Output
                }], colorChange: [{
                    type: i0.Output
                }], disabledChange: [{
                    type: i0.Output
                }], elementAttrChange: [{
                    type: i0.Output
                }], endScaleValueChange: [{
                    type: i0.Output
                }], marginChange: [{
                    type: i0.Output
                }], pathModifiedChange: [{
                    type: i0.Output
                }], rtlEnabledChange: [{
                    type: i0.Output
                }], showTargetChange: [{
                    type: i0.Output
                }], showZeroLevelChange: [{
                    type: i0.Output
                }], sizeChange: [{
                    type: i0.Output
                }], startScaleValueChange: [{
                    type: i0.Output
                }], targetChange: [{
                    type: i0.Output
                }], targetColorChange: [{
                    type: i0.Output
                }], targetWidthChange: [{
                    type: i0.Output
                }], themeChange: [{
                    type: i0.Output
                }], tooltipChange: [{
                    type: i0.Output
                }], valueChange: [{
                    type: i0.Output
                }] });
    })();
    var DxBulletModule = /** @class */ (function () {
        function DxBulletModule() {
        }
        return DxBulletModule;
    }());
    /** @nocollapse */ DxBulletModule.ɵfac = function DxBulletModule_Factory(t) { return new (t || DxBulletModule)(); };
    /** @nocollapse */ DxBulletModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxBulletModule });
    /** @nocollapse */ DxBulletModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({ imports: [[
                nested.DxoMarginModule,
                nested.DxoSizeModule,
                nested.DxoTooltipModule,
                nested.DxoBorderModule,
                nested.DxoFontModule,
                nested.DxoFormatModule,
                nested.DxoShadowModule,
                i1.DxIntegrationModule,
                i1.DxTemplateModule,
                i2.BrowserTransferStateModule
            ], nested.DxoMarginModule,
            nested.DxoSizeModule,
            nested.DxoTooltipModule,
            nested.DxoBorderModule,
            nested.DxoFontModule,
            nested.DxoFormatModule,
            nested.DxoShadowModule,
            i1.DxTemplateModule] });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxBulletModule, [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            nested.DxoMarginModule,
                            nested.DxoSizeModule,
                            nested.DxoTooltipModule,
                            nested.DxoBorderModule,
                            nested.DxoFontModule,
                            nested.DxoFormatModule,
                            nested.DxoShadowModule,
                            i1.DxIntegrationModule,
                            i1.DxTemplateModule,
                            i2.BrowserTransferStateModule
                        ],
                        declarations: [
                            DxBulletComponent
                        ],
                        exports: [
                            DxBulletComponent,
                            nested.DxoMarginModule,
                            nested.DxoSizeModule,
                            nested.DxoTooltipModule,
                            nested.DxoBorderModule,
                            nested.DxoFontModule,
                            nested.DxoFormatModule,
                            nested.DxoShadowModule,
                            i1.DxTemplateModule
                        ]
                    }]
            }], null, null);
    })();
    (function () {
        (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxBulletModule, { declarations: [DxBulletComponent], imports: [nested.DxoMarginModule,
                nested.DxoSizeModule,
                nested.DxoTooltipModule,
                nested.DxoBorderModule,
                nested.DxoFontModule,
                nested.DxoFormatModule,
                nested.DxoShadowModule,
                i1.DxIntegrationModule,
                i1.DxTemplateModule,
                i2.BrowserTransferStateModule], exports: [DxBulletComponent, nested.DxoMarginModule,
                nested.DxoSizeModule,
                nested.DxoTooltipModule,
                nested.DxoBorderModule,
                nested.DxoFontModule,
                nested.DxoFormatModule,
                nested.DxoShadowModule,
                i1.DxTemplateModule] });
    })();

    /**
     * Generated bundle index. Do not edit.
     */

    exports.DxBulletComponent = DxBulletComponent;
    exports.DxBulletModule = DxBulletModule;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=devextreme-angular-ui-bullet.umd.js.map
