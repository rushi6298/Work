(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/platform-browser'), require('@angular/core'), require('devextreme/ui/menu'), require('devextreme-angular/core'), require('devextreme-angular/ui/nested')) :
    typeof define === 'function' && define.amd ? define('devextreme-angular/ui/menu', ['exports', '@angular/platform-browser', '@angular/core', 'devextreme/ui/menu', 'devextreme-angular/core', 'devextreme-angular/ui/nested'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["devextreme-angular"] = global["devextreme-angular"] || {}, global["devextreme-angular"].ui = global["devextreme-angular"].ui || {}, global["devextreme-angular"].ui.menu = {}), global.ng.platformBrowser, global.ng.core, global.DxMenu, global["devextreme-angular"].core, global["devextreme-angular"].ui.nested));
})(this, (function (exports, i2, i0, DxMenu, i1, nested) { 'use strict';

    function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var DxMenu__default = /*#__PURE__*/_interopDefaultLegacy(DxMenu);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (b.hasOwnProperty(p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    function __createBinding(o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    }
    function __exportStar(m, exports) {
        for (var p in m)
            if (p !== "default" && !exports.hasOwnProperty(p))
                exports[p] = m[p];
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    ;
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (Object.hasOwnProperty.call(mod, k))
                    result[k] = mod[k];
        result.default = mod;
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, privateMap) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to get private field on non-instance");
        }
        return privateMap.get(receiver);
    }
    function __classPrivateFieldSet(receiver, privateMap, value) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to set private field on non-instance");
        }
        privateMap.set(receiver, value);
        return value;
    }

    /**
     * The Menu UI component is a panel with clickable items. A click on an item opens a drop-down menu, which can contain several submenus.

     */
    var DxMenuComponent = /** @class */ (function (_super) {
        __extends(DxMenuComponent, _super);
        function DxMenuComponent(elementRef, ngZone, templateHost, _watcherHelper, _idh, optionHost, transferState, platformId) {
            var _this = _super.call(this, elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId) || this;
            _this._watcherHelper = _watcherHelper;
            _this._idh = _idh;
            _this._createEventEmitters([
                { subscribe: 'contentReady', emit: 'onContentReady' },
                { subscribe: 'disposing', emit: 'onDisposing' },
                { subscribe: 'initialized', emit: 'onInitialized' },
                { subscribe: 'itemClick', emit: 'onItemClick' },
                { subscribe: 'itemContextMenu', emit: 'onItemContextMenu' },
                { subscribe: 'itemRendered', emit: 'onItemRendered' },
                { subscribe: 'optionChanged', emit: 'onOptionChanged' },
                { subscribe: 'selectionChanged', emit: 'onSelectionChanged' },
                { subscribe: 'submenuHidden', emit: 'onSubmenuHidden' },
                { subscribe: 'submenuHiding', emit: 'onSubmenuHiding' },
                { subscribe: 'submenuShowing', emit: 'onSubmenuShowing' },
                { subscribe: 'submenuShown', emit: 'onSubmenuShown' },
                { emit: 'accessKeyChange' },
                { emit: 'activeStateEnabledChange' },
                { emit: 'adaptivityEnabledChange' },
                { emit: 'animationChange' },
                { emit: 'cssClassChange' },
                { emit: 'dataSourceChange' },
                { emit: 'disabledChange' },
                { emit: 'disabledExprChange' },
                { emit: 'displayExprChange' },
                { emit: 'elementAttrChange' },
                { emit: 'focusStateEnabledChange' },
                { emit: 'heightChange' },
                { emit: 'hideSubmenuOnMouseLeaveChange' },
                { emit: 'hintChange' },
                { emit: 'hoverStateEnabledChange' },
                { emit: 'itemsChange' },
                { emit: 'itemsExprChange' },
                { emit: 'itemTemplateChange' },
                { emit: 'orientationChange' },
                { emit: 'rtlEnabledChange' },
                { emit: 'selectByClickChange' },
                { emit: 'selectedExprChange' },
                { emit: 'selectedItemChange' },
                { emit: 'selectionModeChange' },
                { emit: 'showFirstSubmenuModeChange' },
                { emit: 'showSubmenuModeChange' },
                { emit: 'submenuDirectionChange' },
                { emit: 'tabIndexChange' },
                { emit: 'visibleChange' },
                { emit: 'widthChange' }
            ]);
            _this._idh.setHost(_this);
            optionHost.setHost(_this);
            return _this;
        }
        Object.defineProperty(DxMenuComponent.prototype, "accessKey", {
            /**
             * Specifies the shortcut key that sets focus on the UI component.
            
             */
            get: function () {
                return this._getOption('accessKey');
            },
            set: function (value) {
                this._setOption('accessKey', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxMenuComponent.prototype, "activeStateEnabled", {
            /**
             * Specifies whether the UI component changes its visual state as a result of user interaction.
            
             */
            get: function () {
                return this._getOption('activeStateEnabled');
            },
            set: function (value) {
                this._setOption('activeStateEnabled', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxMenuComponent.prototype, "adaptivityEnabled", {
            /**
             * Specifies whether adaptive rendering is enabled. This property is in effect only if the orientation is &apos;horizontal&apos;.
            
             */
            get: function () {
                return this._getOption('adaptivityEnabled');
            },
            set: function (value) {
                this._setOption('adaptivityEnabled', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxMenuComponent.prototype, "animation", {
            /**
             * Configures UI component visibility animations. This object contains two fields: show and hide.
            
             */
            get: function () {
                return this._getOption('animation');
            },
            set: function (value) {
                this._setOption('animation', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxMenuComponent.prototype, "cssClass", {
            /**
             * Specifies the name of the CSS class to be applied to the root menu level and all submenus.
            
             */
            get: function () {
                return this._getOption('cssClass');
            },
            set: function (value) {
                this._setOption('cssClass', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxMenuComponent.prototype, "dataSource", {
            /**
             * Binds the UI component to data.
            
             */
            get: function () {
                return this._getOption('dataSource');
            },
            set: function (value) {
                this._setOption('dataSource', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxMenuComponent.prototype, "disabled", {
            /**
             * Specifies whether the UI component responds to user interaction.
            
             */
            get: function () {
                return this._getOption('disabled');
            },
            set: function (value) {
                this._setOption('disabled', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxMenuComponent.prototype, "disabledExpr", {
            /**
             * Specifies the name of the data source item field whose value defines whether or not the corresponding UI component item is disabled.
            
             */
            get: function () {
                return this._getOption('disabledExpr');
            },
            set: function (value) {
                this._setOption('disabledExpr', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxMenuComponent.prototype, "displayExpr", {
            /**
             * Specifies the data field whose values should be displayed.
            
             */
            get: function () {
                return this._getOption('displayExpr');
            },
            set: function (value) {
                this._setOption('displayExpr', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxMenuComponent.prototype, "elementAttr", {
            /**
             * Specifies the global attributes to be attached to the UI component&apos;s container element.
            
             */
            get: function () {
                return this._getOption('elementAttr');
            },
            set: function (value) {
                this._setOption('elementAttr', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxMenuComponent.prototype, "focusStateEnabled", {
            /**
             * Specifies whether the UI component can be focused using keyboard navigation.
            
             */
            get: function () {
                return this._getOption('focusStateEnabled');
            },
            set: function (value) {
                this._setOption('focusStateEnabled', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxMenuComponent.prototype, "height", {
            /**
             * Specifies the UI component&apos;s height.
            
             */
            get: function () {
                return this._getOption('height');
            },
            set: function (value) {
                this._setOption('height', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxMenuComponent.prototype, "hideSubmenuOnMouseLeave", {
            /**
             * Specifies whether or not the submenu is hidden when the mouse pointer leaves it.
            
             */
            get: function () {
                return this._getOption('hideSubmenuOnMouseLeave');
            },
            set: function (value) {
                this._setOption('hideSubmenuOnMouseLeave', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxMenuComponent.prototype, "hint", {
            /**
             * Specifies text for a hint that appears when a user pauses on the UI component.
            
             */
            get: function () {
                return this._getOption('hint');
            },
            set: function (value) {
                this._setOption('hint', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxMenuComponent.prototype, "hoverStateEnabled", {
            /**
             * Specifies whether the UI component changes its state when a user pauses on it.
            
             */
            get: function () {
                return this._getOption('hoverStateEnabled');
            },
            set: function (value) {
                this._setOption('hoverStateEnabled', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxMenuComponent.prototype, "items", {
            /**
             * Holds an array of menu items.
            
             */
            get: function () {
                return this._getOption('items');
            },
            set: function (value) {
                this._setOption('items', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxMenuComponent.prototype, "itemsExpr", {
            /**
             * Specifies which data field contains nested items.
            
             */
            get: function () {
                return this._getOption('itemsExpr');
            },
            set: function (value) {
                this._setOption('itemsExpr', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxMenuComponent.prototype, "itemTemplate", {
            /**
             * Specifies a custom template for items.
            
             */
            get: function () {
                return this._getOption('itemTemplate');
            },
            set: function (value) {
                this._setOption('itemTemplate', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxMenuComponent.prototype, "orientation", {
            /**
             * Specifies whether the menu has horizontal or vertical orientation.
            
             */
            get: function () {
                return this._getOption('orientation');
            },
            set: function (value) {
                this._setOption('orientation', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxMenuComponent.prototype, "rtlEnabled", {
            /**
             * Switches the UI component to a right-to-left representation.
            
             */
            get: function () {
                return this._getOption('rtlEnabled');
            },
            set: function (value) {
                this._setOption('rtlEnabled', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxMenuComponent.prototype, "selectByClick", {
            /**
             * Specifies whether or not an item becomes selected if a user clicks it.
            
             */
            get: function () {
                return this._getOption('selectByClick');
            },
            set: function (value) {
                this._setOption('selectByClick', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxMenuComponent.prototype, "selectedExpr", {
            /**
             * Specifies the name of the data source item field whose value defines whether or not the corresponding UI component items is selected.
            
             */
            get: function () {
                return this._getOption('selectedExpr');
            },
            set: function (value) {
                this._setOption('selectedExpr', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxMenuComponent.prototype, "selectedItem", {
            /**
             * The selected item object.
            
             */
            get: function () {
                return this._getOption('selectedItem');
            },
            set: function (value) {
                this._setOption('selectedItem', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxMenuComponent.prototype, "selectionMode", {
            /**
             * Specifies the selection mode supported by the menu.
            
             */
            get: function () {
                return this._getOption('selectionMode');
            },
            set: function (value) {
                this._setOption('selectionMode', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxMenuComponent.prototype, "showFirstSubmenuMode", {
            /**
             * Specifies properties for showing and hiding the first level submenu.
            
             */
            get: function () {
                return this._getOption('showFirstSubmenuMode');
            },
            set: function (value) {
                this._setOption('showFirstSubmenuMode', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxMenuComponent.prototype, "showSubmenuMode", {
            /**
             * Specifies properties of submenu showing and hiding.
            
             */
            get: function () {
                return this._getOption('showSubmenuMode');
            },
            set: function (value) {
                this._setOption('showSubmenuMode', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxMenuComponent.prototype, "submenuDirection", {
            /**
             * Specifies the direction at which the submenus are displayed.
            
             */
            get: function () {
                return this._getOption('submenuDirection');
            },
            set: function (value) {
                this._setOption('submenuDirection', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxMenuComponent.prototype, "tabIndex", {
            /**
             * Specifies the number of the element when the Tab key is used for navigating.
            
             */
            get: function () {
                return this._getOption('tabIndex');
            },
            set: function (value) {
                this._setOption('tabIndex', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxMenuComponent.prototype, "visible", {
            /**
             * Specifies whether the UI component is visible.
            
             */
            get: function () {
                return this._getOption('visible');
            },
            set: function (value) {
                this._setOption('visible', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxMenuComponent.prototype, "width", {
            /**
             * Specifies the UI component&apos;s width.
            
             */
            get: function () {
                return this._getOption('width');
            },
            set: function (value) {
                this._setOption('width', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxMenuComponent.prototype, "itemsChildren", {
            get: function () {
                return this._getOption('items');
            },
            set: function (value) {
                this.setChildren('items', value);
            },
            enumerable: false,
            configurable: true
        });
        DxMenuComponent.prototype._createInstance = function (element, options) {
            return new DxMenu__default["default"](element, options);
        };
        DxMenuComponent.prototype.ngOnDestroy = function () {
            this._destroyWidget();
        };
        DxMenuComponent.prototype.ngOnChanges = function (changes) {
            _super.prototype.ngOnChanges.call(this, changes);
            this.setupChanges('dataSource', changes);
            this.setupChanges('items', changes);
        };
        DxMenuComponent.prototype.setupChanges = function (prop, changes) {
            if (!(prop in this._optionsToUpdate)) {
                this._idh.setup(prop, changes);
            }
        };
        DxMenuComponent.prototype.ngDoCheck = function () {
            this._idh.doCheck('dataSource');
            this._idh.doCheck('items');
            this._watcherHelper.checkWatchers();
            _super.prototype.ngDoCheck.call(this);
            _super.prototype.clearChangedOptions.call(this);
        };
        DxMenuComponent.prototype._setOption = function (name, value) {
            var isSetup = this._idh.setupSingle(name, value);
            var isChanged = this._idh.getChanges(name, value) !== null;
            if (isSetup || isChanged) {
                _super.prototype._setOption.call(this, name, value);
            }
        };
        return DxMenuComponent;
    }(i1.DxComponent));
    /** @nocollapse */ DxMenuComponent.ɵfac = function DxMenuComponent_Factory(t) { return new (t || DxMenuComponent)(i0__namespace.ɵɵdirectiveInject(i0__namespace.ElementRef), i0__namespace.ɵɵdirectiveInject(i0__namespace.NgZone), i0__namespace.ɵɵdirectiveInject(i1__namespace.DxTemplateHost), i0__namespace.ɵɵdirectiveInject(i1__namespace.WatcherHelper), i0__namespace.ɵɵdirectiveInject(i1__namespace.IterableDifferHelper), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost), i0__namespace.ɵɵdirectiveInject(i2__namespace.TransferState), i0__namespace.ɵɵdirectiveInject(i0.PLATFORM_ID)); };
    /** @nocollapse */ DxMenuComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxMenuComponent, selectors: [["dx-menu"]], contentQueries: function DxMenuComponent_ContentQueries(rf, ctx, dirIndex) {
            if (rf & 1) {
                i0__namespace.ɵɵcontentQuery(dirIndex, nested.DxiItemComponent, 4);
            }
            if (rf & 2) {
                var _t = void 0;
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.itemsChildren = _t);
            }
        }, inputs: { accessKey: "accessKey", activeStateEnabled: "activeStateEnabled", adaptivityEnabled: "adaptivityEnabled", animation: "animation", cssClass: "cssClass", dataSource: "dataSource", disabled: "disabled", disabledExpr: "disabledExpr", displayExpr: "displayExpr", elementAttr: "elementAttr", focusStateEnabled: "focusStateEnabled", height: "height", hideSubmenuOnMouseLeave: "hideSubmenuOnMouseLeave", hint: "hint", hoverStateEnabled: "hoverStateEnabled", items: "items", itemsExpr: "itemsExpr", itemTemplate: "itemTemplate", orientation: "orientation", rtlEnabled: "rtlEnabled", selectByClick: "selectByClick", selectedExpr: "selectedExpr", selectedItem: "selectedItem", selectionMode: "selectionMode", showFirstSubmenuMode: "showFirstSubmenuMode", showSubmenuMode: "showSubmenuMode", submenuDirection: "submenuDirection", tabIndex: "tabIndex", visible: "visible", width: "width" }, outputs: { onContentReady: "onContentReady", onDisposing: "onDisposing", onInitialized: "onInitialized", onItemClick: "onItemClick", onItemContextMenu: "onItemContextMenu", onItemRendered: "onItemRendered", onOptionChanged: "onOptionChanged", onSelectionChanged: "onSelectionChanged", onSubmenuHidden: "onSubmenuHidden", onSubmenuHiding: "onSubmenuHiding", onSubmenuShowing: "onSubmenuShowing", onSubmenuShown: "onSubmenuShown", accessKeyChange: "accessKeyChange", activeStateEnabledChange: "activeStateEnabledChange", adaptivityEnabledChange: "adaptivityEnabledChange", animationChange: "animationChange", cssClassChange: "cssClassChange", dataSourceChange: "dataSourceChange", disabledChange: "disabledChange", disabledExprChange: "disabledExprChange", displayExprChange: "displayExprChange", elementAttrChange: "elementAttrChange", focusStateEnabledChange: "focusStateEnabledChange", heightChange: "heightChange", hideSubmenuOnMouseLeaveChange: "hideSubmenuOnMouseLeaveChange", hintChange: "hintChange", hoverStateEnabledChange: "hoverStateEnabledChange", itemsChange: "itemsChange", itemsExprChange: "itemsExprChange", itemTemplateChange: "itemTemplateChange", orientationChange: "orientationChange", rtlEnabledChange: "rtlEnabledChange", selectByClickChange: "selectByClickChange", selectedExprChange: "selectedExprChange", selectedItemChange: "selectedItemChange", selectionModeChange: "selectionModeChange", showFirstSubmenuModeChange: "showFirstSubmenuModeChange", showSubmenuModeChange: "showSubmenuModeChange", submenuDirectionChange: "submenuDirectionChange", tabIndexChange: "tabIndexChange", visibleChange: "visibleChange", widthChange: "widthChange" }, features: [i0__namespace.ɵɵProvidersFeature([
                i1.DxTemplateHost,
                i1.WatcherHelper,
                i1.NestedOptionHost,
                i1.IterableDifferHelper
            ]), i0__namespace.ɵɵInheritDefinitionFeature, i0__namespace.ɵɵNgOnChangesFeature], decls: 0, vars: 0, template: function DxMenuComponent_Template(rf, ctx) { }, encapsulation: 2 });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxMenuComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'dx-menu',
                        template: '',
                        providers: [
                            i1.DxTemplateHost,
                            i1.WatcherHelper,
                            i1.NestedOptionHost,
                            i1.IterableDifferHelper
                        ]
                    }]
            }], function () {
            return [{ type: i0__namespace.ElementRef }, { type: i0__namespace.NgZone }, { type: i1__namespace.DxTemplateHost }, { type: i1__namespace.WatcherHelper }, { type: i1__namespace.IterableDifferHelper }, { type: i1__namespace.NestedOptionHost }, { type: i2__namespace.TransferState }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i0.PLATFORM_ID]
                        }] }];
        }, { accessKey: [{
                    type: i0.Input
                }], activeStateEnabled: [{
                    type: i0.Input
                }], adaptivityEnabled: [{
                    type: i0.Input
                }], animation: [{
                    type: i0.Input
                }], cssClass: [{
                    type: i0.Input
                }], dataSource: [{
                    type: i0.Input
                }], disabled: [{
                    type: i0.Input
                }], disabledExpr: [{
                    type: i0.Input
                }], displayExpr: [{
                    type: i0.Input
                }], elementAttr: [{
                    type: i0.Input
                }], focusStateEnabled: [{
                    type: i0.Input
                }], height: [{
                    type: i0.Input
                }], hideSubmenuOnMouseLeave: [{
                    type: i0.Input
                }], hint: [{
                    type: i0.Input
                }], hoverStateEnabled: [{
                    type: i0.Input
                }], items: [{
                    type: i0.Input
                }], itemsExpr: [{
                    type: i0.Input
                }], itemTemplate: [{
                    type: i0.Input
                }], orientation: [{
                    type: i0.Input
                }], rtlEnabled: [{
                    type: i0.Input
                }], selectByClick: [{
                    type: i0.Input
                }], selectedExpr: [{
                    type: i0.Input
                }], selectedItem: [{
                    type: i0.Input
                }], selectionMode: [{
                    type: i0.Input
                }], showFirstSubmenuMode: [{
                    type: i0.Input
                }], showSubmenuMode: [{
                    type: i0.Input
                }], submenuDirection: [{
                    type: i0.Input
                }], tabIndex: [{
                    type: i0.Input
                }], visible: [{
                    type: i0.Input
                }], width: [{
                    type: i0.Input
                }], onContentReady: [{
                    type: i0.Output
                }], onDisposing: [{
                    type: i0.Output
                }], onInitialized: [{
                    type: i0.Output
                }], onItemClick: [{
                    type: i0.Output
                }], onItemContextMenu: [{
                    type: i0.Output
                }], onItemRendered: [{
                    type: i0.Output
                }], onOptionChanged: [{
                    type: i0.Output
                }], onSelectionChanged: [{
                    type: i0.Output
                }], onSubmenuHidden: [{
                    type: i0.Output
                }], onSubmenuHiding: [{
                    type: i0.Output
                }], onSubmenuShowing: [{
                    type: i0.Output
                }], onSubmenuShown: [{
                    type: i0.Output
                }], accessKeyChange: [{
                    type: i0.Output
                }], activeStateEnabledChange: [{
                    type: i0.Output
                }], adaptivityEnabledChange: [{
                    type: i0.Output
                }], animationChange: [{
                    type: i0.Output
                }], cssClassChange: [{
                    type: i0.Output
                }], dataSourceChange: [{
                    type: i0.Output
                }], disabledChange: [{
                    type: i0.Output
                }], disabledExprChange: [{
                    type: i0.Output
                }], displayExprChange: [{
                    type: i0.Output
                }], elementAttrChange: [{
                    type: i0.Output
                }], focusStateEnabledChange: [{
                    type: i0.Output
                }], heightChange: [{
                    type: i0.Output
                }], hideSubmenuOnMouseLeaveChange: [{
                    type: i0.Output
                }], hintChange: [{
                    type: i0.Output
                }], hoverStateEnabledChange: [{
                    type: i0.Output
                }], itemsChange: [{
                    type: i0.Output
                }], itemsExprChange: [{
                    type: i0.Output
                }], itemTemplateChange: [{
                    type: i0.Output
                }], orientationChange: [{
                    type: i0.Output
                }], rtlEnabledChange: [{
                    type: i0.Output
                }], selectByClickChange: [{
                    type: i0.Output
                }], selectedExprChange: [{
                    type: i0.Output
                }], selectedItemChange: [{
                    type: i0.Output
                }], selectionModeChange: [{
                    type: i0.Output
                }], showFirstSubmenuModeChange: [{
                    type: i0.Output
                }], showSubmenuModeChange: [{
                    type: i0.Output
                }], submenuDirectionChange: [{
                    type: i0.Output
                }], tabIndexChange: [{
                    type: i0.Output
                }], visibleChange: [{
                    type: i0.Output
                }], widthChange: [{
                    type: i0.Output
                }], itemsChildren: [{
                    type: i0.ContentChildren,
                    args: [nested.DxiItemComponent]
                }] });
    })();
    var DxMenuModule = /** @class */ (function () {
        function DxMenuModule() {
        }
        return DxMenuModule;
    }());
    /** @nocollapse */ DxMenuModule.ɵfac = function DxMenuModule_Factory(t) { return new (t || DxMenuModule)(); };
    /** @nocollapse */ DxMenuModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxMenuModule });
    /** @nocollapse */ DxMenuModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({ imports: [[
                nested.DxoAnimationModule,
                nested.DxoHideModule,
                nested.DxoFromModule,
                nested.DxoPositionModule,
                nested.DxoAtModule,
                nested.DxoBoundaryOffsetModule,
                nested.DxoCollisionModule,
                nested.DxoMyModule,
                nested.DxoOffsetModule,
                nested.DxoToModule,
                nested.DxoShowModule,
                nested.DxiItemModule,
                nested.DxoShowFirstSubmenuModeModule,
                nested.DxoDelayModule,
                nested.DxoShowSubmenuModeModule,
                i1.DxIntegrationModule,
                i1.DxTemplateModule,
                i2.BrowserTransferStateModule
            ], nested.DxoAnimationModule,
            nested.DxoHideModule,
            nested.DxoFromModule,
            nested.DxoPositionModule,
            nested.DxoAtModule,
            nested.DxoBoundaryOffsetModule,
            nested.DxoCollisionModule,
            nested.DxoMyModule,
            nested.DxoOffsetModule,
            nested.DxoToModule,
            nested.DxoShowModule,
            nested.DxiItemModule,
            nested.DxoShowFirstSubmenuModeModule,
            nested.DxoDelayModule,
            nested.DxoShowSubmenuModeModule,
            i1.DxTemplateModule] });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxMenuModule, [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            nested.DxoAnimationModule,
                            nested.DxoHideModule,
                            nested.DxoFromModule,
                            nested.DxoPositionModule,
                            nested.DxoAtModule,
                            nested.DxoBoundaryOffsetModule,
                            nested.DxoCollisionModule,
                            nested.DxoMyModule,
                            nested.DxoOffsetModule,
                            nested.DxoToModule,
                            nested.DxoShowModule,
                            nested.DxiItemModule,
                            nested.DxoShowFirstSubmenuModeModule,
                            nested.DxoDelayModule,
                            nested.DxoShowSubmenuModeModule,
                            i1.DxIntegrationModule,
                            i1.DxTemplateModule,
                            i2.BrowserTransferStateModule
                        ],
                        declarations: [
                            DxMenuComponent
                        ],
                        exports: [
                            DxMenuComponent,
                            nested.DxoAnimationModule,
                            nested.DxoHideModule,
                            nested.DxoFromModule,
                            nested.DxoPositionModule,
                            nested.DxoAtModule,
                            nested.DxoBoundaryOffsetModule,
                            nested.DxoCollisionModule,
                            nested.DxoMyModule,
                            nested.DxoOffsetModule,
                            nested.DxoToModule,
                            nested.DxoShowModule,
                            nested.DxiItemModule,
                            nested.DxoShowFirstSubmenuModeModule,
                            nested.DxoDelayModule,
                            nested.DxoShowSubmenuModeModule,
                            i1.DxTemplateModule
                        ]
                    }]
            }], null, null);
    })();
    (function () {
        (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxMenuModule, { declarations: [DxMenuComponent], imports: [nested.DxoAnimationModule,
                nested.DxoHideModule,
                nested.DxoFromModule,
                nested.DxoPositionModule,
                nested.DxoAtModule,
                nested.DxoBoundaryOffsetModule,
                nested.DxoCollisionModule,
                nested.DxoMyModule,
                nested.DxoOffsetModule,
                nested.DxoToModule,
                nested.DxoShowModule,
                nested.DxiItemModule,
                nested.DxoShowFirstSubmenuModeModule,
                nested.DxoDelayModule,
                nested.DxoShowSubmenuModeModule,
                i1.DxIntegrationModule,
                i1.DxTemplateModule,
                i2.BrowserTransferStateModule], exports: [DxMenuComponent, nested.DxoAnimationModule,
                nested.DxoHideModule,
                nested.DxoFromModule,
                nested.DxoPositionModule,
                nested.DxoAtModule,
                nested.DxoBoundaryOffsetModule,
                nested.DxoCollisionModule,
                nested.DxoMyModule,
                nested.DxoOffsetModule,
                nested.DxoToModule,
                nested.DxoShowModule,
                nested.DxiItemModule,
                nested.DxoShowFirstSubmenuModeModule,
                nested.DxoDelayModule,
                nested.DxoShowSubmenuModeModule,
                i1.DxTemplateModule] });
    })();

    /**
     * Generated bundle index. Do not edit.
     */

    exports.DxMenuComponent = DxMenuComponent;
    exports.DxMenuModule = DxMenuModule;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=devextreme-angular-ui-menu.umd.js.map
