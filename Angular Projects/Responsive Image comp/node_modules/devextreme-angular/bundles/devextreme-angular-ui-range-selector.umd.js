(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/platform-browser'), require('@angular/core'), require('devextreme/viz/range_selector'), require('@angular/forms'), require('devextreme-angular/core'), require('devextreme-angular/ui/nested')) :
    typeof define === 'function' && define.amd ? define('devextreme-angular/ui/range-selector', ['exports', '@angular/platform-browser', '@angular/core', 'devextreme/viz/range_selector', '@angular/forms', 'devextreme-angular/core', 'devextreme-angular/ui/nested'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["devextreme-angular"] = global["devextreme-angular"] || {}, global["devextreme-angular"].ui = global["devextreme-angular"].ui || {}, global["devextreme-angular"].ui["range-selector"] = {}), global.ng.platformBrowser, global.ng.core, global.DxRangeSelector, global.ng.forms, global["devextreme-angular"].core, global["devextreme-angular"].ui.nested));
})(this, (function (exports, i2, i0, DxRangeSelector, forms, i1, nested) { 'use strict';

    function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var DxRangeSelector__default = /*#__PURE__*/_interopDefaultLegacy(DxRangeSelector);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (b.hasOwnProperty(p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    function __createBinding(o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    }
    function __exportStar(m, exports) {
        for (var p in m)
            if (p !== "default" && !exports.hasOwnProperty(p))
                exports[p] = m[p];
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    ;
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (Object.hasOwnProperty.call(mod, k))
                    result[k] = mod[k];
        result.default = mod;
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, privateMap) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to get private field on non-instance");
        }
        return privateMap.get(receiver);
    }
    function __classPrivateFieldSet(receiver, privateMap, value) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to set private field on non-instance");
        }
        privateMap.set(receiver, value);
        return value;
    }

    var CUSTOM_VALUE_ACCESSOR_PROVIDER = {
        provide: forms.NG_VALUE_ACCESSOR,
        useExisting: i0.forwardRef(function () { return DxRangeSelectorComponent; }),
        multi: true
    };
    /**
     * The RangeSelector is a UI component that allows a user to select a range of values on a scale.

     */
    var DxRangeSelectorComponent = /** @class */ (function (_super) {
        __extends(DxRangeSelectorComponent, _super);
        function DxRangeSelectorComponent(elementRef, ngZone, templateHost, _watcherHelper, _idh, optionHost, transferState, platformId) {
            var _this = _super.call(this, elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId) || this;
            _this._watcherHelper = _watcherHelper;
            _this._idh = _idh;
            _this.touched = function (_) { };
            _this._createEventEmitters([
                { subscribe: 'disposing', emit: 'onDisposing' },
                { subscribe: 'drawn', emit: 'onDrawn' },
                { subscribe: 'exported', emit: 'onExported' },
                { subscribe: 'exporting', emit: 'onExporting' },
                { subscribe: 'fileSaving', emit: 'onFileSaving' },
                { subscribe: 'incidentOccurred', emit: 'onIncidentOccurred' },
                { subscribe: 'initialized', emit: 'onInitialized' },
                { subscribe: 'optionChanged', emit: 'onOptionChanged' },
                { subscribe: 'valueChanged', emit: 'onValueChanged' },
                { emit: 'backgroundChange' },
                { emit: 'behaviorChange' },
                { emit: 'chartChange' },
                { emit: 'containerBackgroundColorChange' },
                { emit: 'dataSourceChange' },
                { emit: 'dataSourceFieldChange' },
                { emit: 'disabledChange' },
                { emit: 'elementAttrChange' },
                { emit: 'exportChange' },
                { emit: 'indentChange' },
                { emit: 'loadingIndicatorChange' },
                { emit: 'marginChange' },
                { emit: 'pathModifiedChange' },
                { emit: 'redrawOnResizeChange' },
                { emit: 'rtlEnabledChange' },
                { emit: 'scaleChange' },
                { emit: 'selectedRangeColorChange' },
                { emit: 'selectedRangeUpdateModeChange' },
                { emit: 'shutterChange' },
                { emit: 'sizeChange' },
                { emit: 'sliderHandleChange' },
                { emit: 'sliderMarkerChange' },
                { emit: 'themeChange' },
                { emit: 'titleChange' },
                { emit: 'valueChange' },
                { emit: 'onBlur' }
            ]);
            _this._idh.setHost(_this);
            optionHost.setHost(_this);
            return _this;
        }
        Object.defineProperty(DxRangeSelectorComponent.prototype, "background", {
            /**
             * Specifies the properties for the range selector&apos;s background.
            
             */
            get: function () {
                return this._getOption('background');
            },
            set: function (value) {
                this._setOption('background', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxRangeSelectorComponent.prototype, "behavior", {
            /**
             * Specifies the RangeSelector&apos;s behavior properties.
            
             */
            get: function () {
                return this._getOption('behavior');
            },
            set: function (value) {
                this._setOption('behavior', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxRangeSelectorComponent.prototype, "chart", {
            /**
             * Specifies the properties required to display a chart as the range selector&apos;s background.
            
             */
            get: function () {
                return this._getOption('chart');
            },
            set: function (value) {
                this._setOption('chart', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxRangeSelectorComponent.prototype, "containerBackgroundColor", {
            /**
             * Specifies the color of the parent page element.
            
             */
            get: function () {
                return this._getOption('containerBackgroundColor');
            },
            set: function (value) {
                this._setOption('containerBackgroundColor', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxRangeSelectorComponent.prototype, "dataSource", {
            /**
             * Specifies a data source for the scale values and for the chart at the background.
            
             */
            get: function () {
                return this._getOption('dataSource');
            },
            set: function (value) {
                this._setOption('dataSource', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxRangeSelectorComponent.prototype, "dataSourceField", {
            /**
             * Specifies the data source field that provides data for the scale.
            
             */
            get: function () {
                return this._getOption('dataSourceField');
            },
            set: function (value) {
                this._setOption('dataSourceField', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxRangeSelectorComponent.prototype, "disabled", {
            /**
             * Specifies whether the UI component responds to user interaction.
            
             */
            get: function () {
                return this._getOption('disabled');
            },
            set: function (value) {
                this._setOption('disabled', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxRangeSelectorComponent.prototype, "elementAttr", {
            /**
             * Specifies the global attributes to be attached to the UI component&apos;s container element.
            
             */
            get: function () {
                return this._getOption('elementAttr');
            },
            set: function (value) {
                this._setOption('elementAttr', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxRangeSelectorComponent.prototype, "export", {
            /**
             * Configures the exporting and printing features.
            
             */
            get: function () {
                return this._getOption('export');
            },
            set: function (value) {
                this._setOption('export', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxRangeSelectorComponent.prototype, "indent", {
            /**
             * Range selector&apos;s indent properties.
            
             */
            get: function () {
                return this._getOption('indent');
            },
            set: function (value) {
                this._setOption('indent', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxRangeSelectorComponent.prototype, "loadingIndicator", {
            /**
             * Configures the loading indicator.
            
             */
            get: function () {
                return this._getOption('loadingIndicator');
            },
            set: function (value) {
                this._setOption('loadingIndicator', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxRangeSelectorComponent.prototype, "margin", {
            /**
             * Generates space around the UI component.
            
             */
            get: function () {
                return this._getOption('margin');
            },
            set: function (value) {
                this._setOption('margin', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxRangeSelectorComponent.prototype, "pathModified", {
            /**
             * Notifies the UI component that it is embedded into an HTML page that uses a tag modifying the path.
            
             */
            get: function () {
                return this._getOption('pathModified');
            },
            set: function (value) {
                this._setOption('pathModified', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxRangeSelectorComponent.prototype, "redrawOnResize", {
            /**
             * Specifies whether to redraw the UI component when the size of the container changes or a mobile device rotates.
            
             */
            get: function () {
                return this._getOption('redrawOnResize');
            },
            set: function (value) {
                this._setOption('redrawOnResize', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxRangeSelectorComponent.prototype, "rtlEnabled", {
            /**
             * Switches the UI component to a right-to-left representation.
            
             */
            get: function () {
                return this._getOption('rtlEnabled');
            },
            set: function (value) {
                this._setOption('rtlEnabled', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxRangeSelectorComponent.prototype, "scale", {
            /**
             * Specifies properties of the range selector&apos;s scale.
            
             */
            get: function () {
                return this._getOption('scale');
            },
            set: function (value) {
                this._setOption('scale', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxRangeSelectorComponent.prototype, "selectedRangeColor", {
            /**
             * Specifies the color of the selected range.
            
             */
            get: function () {
                return this._getOption('selectedRangeColor');
            },
            set: function (value) {
                this._setOption('selectedRangeColor', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxRangeSelectorComponent.prototype, "selectedRangeUpdateMode", {
            /**
             * Specifies how the selected range should behave when data is updated. Applies only when the RangeSelector is bound to a data source.
            
             */
            get: function () {
                return this._getOption('selectedRangeUpdateMode');
            },
            set: function (value) {
                this._setOption('selectedRangeUpdateMode', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxRangeSelectorComponent.prototype, "shutter", {
            /**
             * Specifies range selector shutter properties.
            
             */
            get: function () {
                return this._getOption('shutter');
            },
            set: function (value) {
                this._setOption('shutter', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxRangeSelectorComponent.prototype, "size", {
            /**
             * Specifies the UI component&apos;s size in pixels.
            
             */
            get: function () {
                return this._getOption('size');
            },
            set: function (value) {
                this._setOption('size', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxRangeSelectorComponent.prototype, "sliderHandle", {
            /**
             * Specifies the appearance of the range selector&apos;s slider handles.
            
             */
            get: function () {
                return this._getOption('sliderHandle');
            },
            set: function (value) {
                this._setOption('sliderHandle', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxRangeSelectorComponent.prototype, "sliderMarker", {
            /**
             * Defines the properties of the range selector slider markers.
            
             */
            get: function () {
                return this._getOption('sliderMarker');
            },
            set: function (value) {
                this._setOption('sliderMarker', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxRangeSelectorComponent.prototype, "theme", {
            /**
             * Sets the name of the theme the UI component uses.
            
             */
            get: function () {
                return this._getOption('theme');
            },
            set: function (value) {
                this._setOption('theme', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxRangeSelectorComponent.prototype, "title", {
            /**
             * Configures the UI component&apos;s title.
            
             */
            get: function () {
                return this._getOption('title');
            },
            set: function (value) {
                this._setOption('title', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxRangeSelectorComponent.prototype, "value", {
            /**
             * The selected range (initial or current). Equals the entire scale when not set.
            
             */
            get: function () {
                return this._getOption('value');
            },
            set: function (value) {
                this._setOption('value', value);
            },
            enumerable: false,
            configurable: true
        });
        DxRangeSelectorComponent.prototype.change = function (_) { };
        DxRangeSelectorComponent.prototype._createInstance = function (element, options) {
            return new DxRangeSelector__default["default"](element, options);
        };
        DxRangeSelectorComponent.prototype.writeValue = function (value) {
            this.eventHelper.lockedValueChangeEvent = true;
            this.value = value;
            this.eventHelper.lockedValueChangeEvent = false;
        };
        DxRangeSelectorComponent.prototype.registerOnChange = function (fn) { this.change = fn; };
        DxRangeSelectorComponent.prototype.registerOnTouched = function (fn) { this.touched = fn; };
        DxRangeSelectorComponent.prototype._createWidget = function (element) {
            var _this = this;
            _super.prototype._createWidget.call(this, element);
            this.instance.on('focusOut', function (e) {
                _this.eventHelper.fireNgEvent('onBlur', [e]);
            });
        };
        DxRangeSelectorComponent.prototype.ngOnDestroy = function () {
            this._destroyWidget();
        };
        DxRangeSelectorComponent.prototype.ngOnChanges = function (changes) {
            _super.prototype.ngOnChanges.call(this, changes);
            this.setupChanges('dataSource', changes);
            this.setupChanges('value', changes);
        };
        DxRangeSelectorComponent.prototype.setupChanges = function (prop, changes) {
            if (!(prop in this._optionsToUpdate)) {
                this._idh.setup(prop, changes);
            }
        };
        DxRangeSelectorComponent.prototype.ngDoCheck = function () {
            this._idh.doCheck('dataSource');
            this._idh.doCheck('value');
            this._watcherHelper.checkWatchers();
            _super.prototype.ngDoCheck.call(this);
            _super.prototype.clearChangedOptions.call(this);
        };
        DxRangeSelectorComponent.prototype._setOption = function (name, value) {
            var isSetup = this._idh.setupSingle(name, value);
            var isChanged = this._idh.getChanges(name, value) !== null;
            if (isSetup || isChanged) {
                _super.prototype._setOption.call(this, name, value);
            }
        };
        return DxRangeSelectorComponent;
    }(i1.DxComponent));
    /** @nocollapse */ DxRangeSelectorComponent.ɵfac = function DxRangeSelectorComponent_Factory(t) { return new (t || DxRangeSelectorComponent)(i0__namespace.ɵɵdirectiveInject(i0__namespace.ElementRef), i0__namespace.ɵɵdirectiveInject(i0__namespace.NgZone), i0__namespace.ɵɵdirectiveInject(i1__namespace.DxTemplateHost), i0__namespace.ɵɵdirectiveInject(i1__namespace.WatcherHelper), i0__namespace.ɵɵdirectiveInject(i1__namespace.IterableDifferHelper), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost), i0__namespace.ɵɵdirectiveInject(i2__namespace.TransferState), i0__namespace.ɵɵdirectiveInject(i0.PLATFORM_ID)); };
    /** @nocollapse */ DxRangeSelectorComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxRangeSelectorComponent, selectors: [["dx-range-selector"]], hostBindings: function DxRangeSelectorComponent_HostBindings(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵlistener("valueChange", function DxRangeSelectorComponent_valueChange_HostBindingHandler($event) { return ctx.change($event); })("onBlur", function DxRangeSelectorComponent_onBlur_HostBindingHandler($event) { return ctx.touched($event); });
            }
        }, inputs: { background: "background", behavior: "behavior", chart: "chart", containerBackgroundColor: "containerBackgroundColor", dataSource: "dataSource", dataSourceField: "dataSourceField", disabled: "disabled", elementAttr: "elementAttr", export: "export", indent: "indent", loadingIndicator: "loadingIndicator", margin: "margin", pathModified: "pathModified", redrawOnResize: "redrawOnResize", rtlEnabled: "rtlEnabled", scale: "scale", selectedRangeColor: "selectedRangeColor", selectedRangeUpdateMode: "selectedRangeUpdateMode", shutter: "shutter", size: "size", sliderHandle: "sliderHandle", sliderMarker: "sliderMarker", theme: "theme", title: "title", value: "value" }, outputs: { onDisposing: "onDisposing", onDrawn: "onDrawn", onExported: "onExported", onExporting: "onExporting", onFileSaving: "onFileSaving", onIncidentOccurred: "onIncidentOccurred", onInitialized: "onInitialized", onOptionChanged: "onOptionChanged", onValueChanged: "onValueChanged", backgroundChange: "backgroundChange", behaviorChange: "behaviorChange", chartChange: "chartChange", containerBackgroundColorChange: "containerBackgroundColorChange", dataSourceChange: "dataSourceChange", dataSourceFieldChange: "dataSourceFieldChange", disabledChange: "disabledChange", elementAttrChange: "elementAttrChange", exportChange: "exportChange", indentChange: "indentChange", loadingIndicatorChange: "loadingIndicatorChange", marginChange: "marginChange", pathModifiedChange: "pathModifiedChange", redrawOnResizeChange: "redrawOnResizeChange", rtlEnabledChange: "rtlEnabledChange", scaleChange: "scaleChange", selectedRangeColorChange: "selectedRangeColorChange", selectedRangeUpdateModeChange: "selectedRangeUpdateModeChange", shutterChange: "shutterChange", sizeChange: "sizeChange", sliderHandleChange: "sliderHandleChange", sliderMarkerChange: "sliderMarkerChange", themeChange: "themeChange", titleChange: "titleChange", valueChange: "valueChange", onBlur: "onBlur" }, features: [i0__namespace.ɵɵProvidersFeature([
                i1.DxTemplateHost,
                i1.WatcherHelper,
                CUSTOM_VALUE_ACCESSOR_PROVIDER,
                i1.NestedOptionHost,
                i1.IterableDifferHelper
            ]), i0__namespace.ɵɵInheritDefinitionFeature, i0__namespace.ɵɵNgOnChangesFeature], decls: 0, vars: 0, template: function DxRangeSelectorComponent_Template(rf, ctx) { }, styles: ["[_nghost-%COMP%] {  display: block; }"] });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxRangeSelectorComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'dx-range-selector',
                        template: '',
                        styles: [' :host {  display: block; }'],
                        providers: [
                            i1.DxTemplateHost,
                            i1.WatcherHelper,
                            CUSTOM_VALUE_ACCESSOR_PROVIDER,
                            i1.NestedOptionHost,
                            i1.IterableDifferHelper
                        ]
                    }]
            }], function () {
            return [{ type: i0__namespace.ElementRef }, { type: i0__namespace.NgZone }, { type: i1__namespace.DxTemplateHost }, { type: i1__namespace.WatcherHelper }, { type: i1__namespace.IterableDifferHelper }, { type: i1__namespace.NestedOptionHost }, { type: i2__namespace.TransferState }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i0.PLATFORM_ID]
                        }] }];
        }, { background: [{
                    type: i0.Input
                }], behavior: [{
                    type: i0.Input
                }], chart: [{
                    type: i0.Input
                }], containerBackgroundColor: [{
                    type: i0.Input
                }], dataSource: [{
                    type: i0.Input
                }], dataSourceField: [{
                    type: i0.Input
                }], disabled: [{
                    type: i0.Input
                }], elementAttr: [{
                    type: i0.Input
                }], export: [{
                    type: i0.Input
                }], indent: [{
                    type: i0.Input
                }], loadingIndicator: [{
                    type: i0.Input
                }], margin: [{
                    type: i0.Input
                }], pathModified: [{
                    type: i0.Input
                }], redrawOnResize: [{
                    type: i0.Input
                }], rtlEnabled: [{
                    type: i0.Input
                }], scale: [{
                    type: i0.Input
                }], selectedRangeColor: [{
                    type: i0.Input
                }], selectedRangeUpdateMode: [{
                    type: i0.Input
                }], shutter: [{
                    type: i0.Input
                }], size: [{
                    type: i0.Input
                }], sliderHandle: [{
                    type: i0.Input
                }], sliderMarker: [{
                    type: i0.Input
                }], theme: [{
                    type: i0.Input
                }], title: [{
                    type: i0.Input
                }], value: [{
                    type: i0.Input
                }], onDisposing: [{
                    type: i0.Output
                }], onDrawn: [{
                    type: i0.Output
                }], onExported: [{
                    type: i0.Output
                }], onExporting: [{
                    type: i0.Output
                }], onFileSaving: [{
                    type: i0.Output
                }], onIncidentOccurred: [{
                    type: i0.Output
                }], onInitialized: [{
                    type: i0.Output
                }], onOptionChanged: [{
                    type: i0.Output
                }], onValueChanged: [{
                    type: i0.Output
                }], backgroundChange: [{
                    type: i0.Output
                }], behaviorChange: [{
                    type: i0.Output
                }], chartChange: [{
                    type: i0.Output
                }], containerBackgroundColorChange: [{
                    type: i0.Output
                }], dataSourceChange: [{
                    type: i0.Output
                }], dataSourceFieldChange: [{
                    type: i0.Output
                }], disabledChange: [{
                    type: i0.Output
                }], elementAttrChange: [{
                    type: i0.Output
                }], exportChange: [{
                    type: i0.Output
                }], indentChange: [{
                    type: i0.Output
                }], loadingIndicatorChange: [{
                    type: i0.Output
                }], marginChange: [{
                    type: i0.Output
                }], pathModifiedChange: [{
                    type: i0.Output
                }], redrawOnResizeChange: [{
                    type: i0.Output
                }], rtlEnabledChange: [{
                    type: i0.Output
                }], scaleChange: [{
                    type: i0.Output
                }], selectedRangeColorChange: [{
                    type: i0.Output
                }], selectedRangeUpdateModeChange: [{
                    type: i0.Output
                }], shutterChange: [{
                    type: i0.Output
                }], sizeChange: [{
                    type: i0.Output
                }], sliderHandleChange: [{
                    type: i0.Output
                }], sliderMarkerChange: [{
                    type: i0.Output
                }], themeChange: [{
                    type: i0.Output
                }], titleChange: [{
                    type: i0.Output
                }], valueChange: [{
                    type: i0.Output
                }], onBlur: [{
                    type: i0.Output
                }], change: [{
                    type: i0.HostListener,
                    args: ['valueChange', ['$event']]
                }], touched: [{
                    type: i0.HostListener,
                    args: ['onBlur', ['$event']]
                }] });
    })();
    var DxRangeSelectorModule = /** @class */ (function () {
        function DxRangeSelectorModule() {
        }
        return DxRangeSelectorModule;
    }());
    /** @nocollapse */ DxRangeSelectorModule.ɵfac = function DxRangeSelectorModule_Factory(t) { return new (t || DxRangeSelectorModule)(); };
    /** @nocollapse */ DxRangeSelectorModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxRangeSelectorModule });
    /** @nocollapse */ DxRangeSelectorModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({ imports: [[
                nested.DxoBackgroundModule,
                nested.DxoImageModule,
                nested.DxoBehaviorModule,
                nested.DxoChartModule,
                nested.DxoCommonSeriesSettingsModule,
                nested.DxoAggregationModule,
                nested.DxoAreaModule,
                nested.DxoBorderModule,
                nested.DxoHoverStyleModule,
                nested.DxoHatchingModule,
                nested.DxoLabelModule,
                nested.DxoConnectorModule,
                nested.DxoPointModule,
                nested.DxoHeightModule,
                nested.DxoUrlModule,
                nested.DxoWidthModule,
                nested.DxoSelectionStyleModule,
                nested.DxoReductionModule,
                nested.DxoValueErrorBarModule,
                nested.DxoBarModule,
                nested.DxoBubbleModule,
                nested.DxoCandlestickModule,
                nested.DxoFullstackedareaModule,
                nested.DxoFullstackedbarModule,
                nested.DxoFullstackedlineModule,
                nested.DxoFullstackedsplineModule,
                nested.DxoFullstackedsplineareaModule,
                nested.DxoArgumentFormatModule,
                nested.DxoFontModule,
                nested.DxoFormatModule,
                nested.DxoLineModule,
                nested.DxoRangeareaModule,
                nested.DxoRangebarModule,
                nested.DxoScatterModule,
                nested.DxoSplineModule,
                nested.DxoSplineareaModule,
                nested.DxoStackedareaModule,
                nested.DxoStackedbarModule,
                nested.DxoStackedlineModule,
                nested.DxoStackedsplineModule,
                nested.DxoStackedsplineareaModule,
                nested.DxoStepareaModule,
                nested.DxoSteplineModule,
                nested.DxoStockModule,
                nested.DxoDataPrepareSettingsModule,
                nested.DxiSeriesModule,
                nested.DxoSeriesTemplateModule,
                nested.DxoValueAxisModule,
                nested.DxoExportModule,
                nested.DxoIndentModule,
                nested.DxoLoadingIndicatorModule,
                nested.DxoMarginModule,
                nested.DxoScaleModule,
                nested.DxoAggregationIntervalModule,
                nested.DxiBreakModule,
                nested.DxoBreakStyleModule,
                nested.DxoMarkerModule,
                nested.DxoMaxRangeModule,
                nested.DxoMinorTickModule,
                nested.DxoMinorTickIntervalModule,
                nested.DxoMinRangeModule,
                nested.DxoTickModule,
                nested.DxoTickIntervalModule,
                nested.DxoShutterModule,
                nested.DxoSizeModule,
                nested.DxoSliderHandleModule,
                nested.DxoSliderMarkerModule,
                nested.DxoTitleModule,
                nested.DxoSubtitleModule,
                i1.DxIntegrationModule,
                i1.DxTemplateModule,
                i2.BrowserTransferStateModule
            ], nested.DxoBackgroundModule,
            nested.DxoImageModule,
            nested.DxoBehaviorModule,
            nested.DxoChartModule,
            nested.DxoCommonSeriesSettingsModule,
            nested.DxoAggregationModule,
            nested.DxoAreaModule,
            nested.DxoBorderModule,
            nested.DxoHoverStyleModule,
            nested.DxoHatchingModule,
            nested.DxoLabelModule,
            nested.DxoConnectorModule,
            nested.DxoPointModule,
            nested.DxoHeightModule,
            nested.DxoUrlModule,
            nested.DxoWidthModule,
            nested.DxoSelectionStyleModule,
            nested.DxoReductionModule,
            nested.DxoValueErrorBarModule,
            nested.DxoBarModule,
            nested.DxoBubbleModule,
            nested.DxoCandlestickModule,
            nested.DxoFullstackedareaModule,
            nested.DxoFullstackedbarModule,
            nested.DxoFullstackedlineModule,
            nested.DxoFullstackedsplineModule,
            nested.DxoFullstackedsplineareaModule,
            nested.DxoArgumentFormatModule,
            nested.DxoFontModule,
            nested.DxoFormatModule,
            nested.DxoLineModule,
            nested.DxoRangeareaModule,
            nested.DxoRangebarModule,
            nested.DxoScatterModule,
            nested.DxoSplineModule,
            nested.DxoSplineareaModule,
            nested.DxoStackedareaModule,
            nested.DxoStackedbarModule,
            nested.DxoStackedlineModule,
            nested.DxoStackedsplineModule,
            nested.DxoStackedsplineareaModule,
            nested.DxoStepareaModule,
            nested.DxoSteplineModule,
            nested.DxoStockModule,
            nested.DxoDataPrepareSettingsModule,
            nested.DxiSeriesModule,
            nested.DxoSeriesTemplateModule,
            nested.DxoValueAxisModule,
            nested.DxoExportModule,
            nested.DxoIndentModule,
            nested.DxoLoadingIndicatorModule,
            nested.DxoMarginModule,
            nested.DxoScaleModule,
            nested.DxoAggregationIntervalModule,
            nested.DxiBreakModule,
            nested.DxoBreakStyleModule,
            nested.DxoMarkerModule,
            nested.DxoMaxRangeModule,
            nested.DxoMinorTickModule,
            nested.DxoMinorTickIntervalModule,
            nested.DxoMinRangeModule,
            nested.DxoTickModule,
            nested.DxoTickIntervalModule,
            nested.DxoShutterModule,
            nested.DxoSizeModule,
            nested.DxoSliderHandleModule,
            nested.DxoSliderMarkerModule,
            nested.DxoTitleModule,
            nested.DxoSubtitleModule,
            i1.DxTemplateModule] });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxRangeSelectorModule, [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            nested.DxoBackgroundModule,
                            nested.DxoImageModule,
                            nested.DxoBehaviorModule,
                            nested.DxoChartModule,
                            nested.DxoCommonSeriesSettingsModule,
                            nested.DxoAggregationModule,
                            nested.DxoAreaModule,
                            nested.DxoBorderModule,
                            nested.DxoHoverStyleModule,
                            nested.DxoHatchingModule,
                            nested.DxoLabelModule,
                            nested.DxoConnectorModule,
                            nested.DxoPointModule,
                            nested.DxoHeightModule,
                            nested.DxoUrlModule,
                            nested.DxoWidthModule,
                            nested.DxoSelectionStyleModule,
                            nested.DxoReductionModule,
                            nested.DxoValueErrorBarModule,
                            nested.DxoBarModule,
                            nested.DxoBubbleModule,
                            nested.DxoCandlestickModule,
                            nested.DxoFullstackedareaModule,
                            nested.DxoFullstackedbarModule,
                            nested.DxoFullstackedlineModule,
                            nested.DxoFullstackedsplineModule,
                            nested.DxoFullstackedsplineareaModule,
                            nested.DxoArgumentFormatModule,
                            nested.DxoFontModule,
                            nested.DxoFormatModule,
                            nested.DxoLineModule,
                            nested.DxoRangeareaModule,
                            nested.DxoRangebarModule,
                            nested.DxoScatterModule,
                            nested.DxoSplineModule,
                            nested.DxoSplineareaModule,
                            nested.DxoStackedareaModule,
                            nested.DxoStackedbarModule,
                            nested.DxoStackedlineModule,
                            nested.DxoStackedsplineModule,
                            nested.DxoStackedsplineareaModule,
                            nested.DxoStepareaModule,
                            nested.DxoSteplineModule,
                            nested.DxoStockModule,
                            nested.DxoDataPrepareSettingsModule,
                            nested.DxiSeriesModule,
                            nested.DxoSeriesTemplateModule,
                            nested.DxoValueAxisModule,
                            nested.DxoExportModule,
                            nested.DxoIndentModule,
                            nested.DxoLoadingIndicatorModule,
                            nested.DxoMarginModule,
                            nested.DxoScaleModule,
                            nested.DxoAggregationIntervalModule,
                            nested.DxiBreakModule,
                            nested.DxoBreakStyleModule,
                            nested.DxoMarkerModule,
                            nested.DxoMaxRangeModule,
                            nested.DxoMinorTickModule,
                            nested.DxoMinorTickIntervalModule,
                            nested.DxoMinRangeModule,
                            nested.DxoTickModule,
                            nested.DxoTickIntervalModule,
                            nested.DxoShutterModule,
                            nested.DxoSizeModule,
                            nested.DxoSliderHandleModule,
                            nested.DxoSliderMarkerModule,
                            nested.DxoTitleModule,
                            nested.DxoSubtitleModule,
                            i1.DxIntegrationModule,
                            i1.DxTemplateModule,
                            i2.BrowserTransferStateModule
                        ],
                        declarations: [
                            DxRangeSelectorComponent
                        ],
                        exports: [
                            DxRangeSelectorComponent,
                            nested.DxoBackgroundModule,
                            nested.DxoImageModule,
                            nested.DxoBehaviorModule,
                            nested.DxoChartModule,
                            nested.DxoCommonSeriesSettingsModule,
                            nested.DxoAggregationModule,
                            nested.DxoAreaModule,
                            nested.DxoBorderModule,
                            nested.DxoHoverStyleModule,
                            nested.DxoHatchingModule,
                            nested.DxoLabelModule,
                            nested.DxoConnectorModule,
                            nested.DxoPointModule,
                            nested.DxoHeightModule,
                            nested.DxoUrlModule,
                            nested.DxoWidthModule,
                            nested.DxoSelectionStyleModule,
                            nested.DxoReductionModule,
                            nested.DxoValueErrorBarModule,
                            nested.DxoBarModule,
                            nested.DxoBubbleModule,
                            nested.DxoCandlestickModule,
                            nested.DxoFullstackedareaModule,
                            nested.DxoFullstackedbarModule,
                            nested.DxoFullstackedlineModule,
                            nested.DxoFullstackedsplineModule,
                            nested.DxoFullstackedsplineareaModule,
                            nested.DxoArgumentFormatModule,
                            nested.DxoFontModule,
                            nested.DxoFormatModule,
                            nested.DxoLineModule,
                            nested.DxoRangeareaModule,
                            nested.DxoRangebarModule,
                            nested.DxoScatterModule,
                            nested.DxoSplineModule,
                            nested.DxoSplineareaModule,
                            nested.DxoStackedareaModule,
                            nested.DxoStackedbarModule,
                            nested.DxoStackedlineModule,
                            nested.DxoStackedsplineModule,
                            nested.DxoStackedsplineareaModule,
                            nested.DxoStepareaModule,
                            nested.DxoSteplineModule,
                            nested.DxoStockModule,
                            nested.DxoDataPrepareSettingsModule,
                            nested.DxiSeriesModule,
                            nested.DxoSeriesTemplateModule,
                            nested.DxoValueAxisModule,
                            nested.DxoExportModule,
                            nested.DxoIndentModule,
                            nested.DxoLoadingIndicatorModule,
                            nested.DxoMarginModule,
                            nested.DxoScaleModule,
                            nested.DxoAggregationIntervalModule,
                            nested.DxiBreakModule,
                            nested.DxoBreakStyleModule,
                            nested.DxoMarkerModule,
                            nested.DxoMaxRangeModule,
                            nested.DxoMinorTickModule,
                            nested.DxoMinorTickIntervalModule,
                            nested.DxoMinRangeModule,
                            nested.DxoTickModule,
                            nested.DxoTickIntervalModule,
                            nested.DxoShutterModule,
                            nested.DxoSizeModule,
                            nested.DxoSliderHandleModule,
                            nested.DxoSliderMarkerModule,
                            nested.DxoTitleModule,
                            nested.DxoSubtitleModule,
                            i1.DxTemplateModule
                        ]
                    }]
            }], null, null);
    })();
    (function () {
        (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxRangeSelectorModule, { declarations: [DxRangeSelectorComponent], imports: [nested.DxoBackgroundModule,
                nested.DxoImageModule,
                nested.DxoBehaviorModule,
                nested.DxoChartModule,
                nested.DxoCommonSeriesSettingsModule,
                nested.DxoAggregationModule,
                nested.DxoAreaModule,
                nested.DxoBorderModule,
                nested.DxoHoverStyleModule,
                nested.DxoHatchingModule,
                nested.DxoLabelModule,
                nested.DxoConnectorModule,
                nested.DxoPointModule,
                nested.DxoHeightModule,
                nested.DxoUrlModule,
                nested.DxoWidthModule,
                nested.DxoSelectionStyleModule,
                nested.DxoReductionModule,
                nested.DxoValueErrorBarModule,
                nested.DxoBarModule,
                nested.DxoBubbleModule,
                nested.DxoCandlestickModule,
                nested.DxoFullstackedareaModule,
                nested.DxoFullstackedbarModule,
                nested.DxoFullstackedlineModule,
                nested.DxoFullstackedsplineModule,
                nested.DxoFullstackedsplineareaModule,
                nested.DxoArgumentFormatModule,
                nested.DxoFontModule,
                nested.DxoFormatModule,
                nested.DxoLineModule,
                nested.DxoRangeareaModule,
                nested.DxoRangebarModule,
                nested.DxoScatterModule,
                nested.DxoSplineModule,
                nested.DxoSplineareaModule,
                nested.DxoStackedareaModule,
                nested.DxoStackedbarModule,
                nested.DxoStackedlineModule,
                nested.DxoStackedsplineModule,
                nested.DxoStackedsplineareaModule,
                nested.DxoStepareaModule,
                nested.DxoSteplineModule,
                nested.DxoStockModule,
                nested.DxoDataPrepareSettingsModule,
                nested.DxiSeriesModule,
                nested.DxoSeriesTemplateModule,
                nested.DxoValueAxisModule,
                nested.DxoExportModule,
                nested.DxoIndentModule,
                nested.DxoLoadingIndicatorModule,
                nested.DxoMarginModule,
                nested.DxoScaleModule,
                nested.DxoAggregationIntervalModule,
                nested.DxiBreakModule,
                nested.DxoBreakStyleModule,
                nested.DxoMarkerModule,
                nested.DxoMaxRangeModule,
                nested.DxoMinorTickModule,
                nested.DxoMinorTickIntervalModule,
                nested.DxoMinRangeModule,
                nested.DxoTickModule,
                nested.DxoTickIntervalModule,
                nested.DxoShutterModule,
                nested.DxoSizeModule,
                nested.DxoSliderHandleModule,
                nested.DxoSliderMarkerModule,
                nested.DxoTitleModule,
                nested.DxoSubtitleModule,
                i1.DxIntegrationModule,
                i1.DxTemplateModule,
                i2.BrowserTransferStateModule], exports: [DxRangeSelectorComponent, nested.DxoBackgroundModule,
                nested.DxoImageModule,
                nested.DxoBehaviorModule,
                nested.DxoChartModule,
                nested.DxoCommonSeriesSettingsModule,
                nested.DxoAggregationModule,
                nested.DxoAreaModule,
                nested.DxoBorderModule,
                nested.DxoHoverStyleModule,
                nested.DxoHatchingModule,
                nested.DxoLabelModule,
                nested.DxoConnectorModule,
                nested.DxoPointModule,
                nested.DxoHeightModule,
                nested.DxoUrlModule,
                nested.DxoWidthModule,
                nested.DxoSelectionStyleModule,
                nested.DxoReductionModule,
                nested.DxoValueErrorBarModule,
                nested.DxoBarModule,
                nested.DxoBubbleModule,
                nested.DxoCandlestickModule,
                nested.DxoFullstackedareaModule,
                nested.DxoFullstackedbarModule,
                nested.DxoFullstackedlineModule,
                nested.DxoFullstackedsplineModule,
                nested.DxoFullstackedsplineareaModule,
                nested.DxoArgumentFormatModule,
                nested.DxoFontModule,
                nested.DxoFormatModule,
                nested.DxoLineModule,
                nested.DxoRangeareaModule,
                nested.DxoRangebarModule,
                nested.DxoScatterModule,
                nested.DxoSplineModule,
                nested.DxoSplineareaModule,
                nested.DxoStackedareaModule,
                nested.DxoStackedbarModule,
                nested.DxoStackedlineModule,
                nested.DxoStackedsplineModule,
                nested.DxoStackedsplineareaModule,
                nested.DxoStepareaModule,
                nested.DxoSteplineModule,
                nested.DxoStockModule,
                nested.DxoDataPrepareSettingsModule,
                nested.DxiSeriesModule,
                nested.DxoSeriesTemplateModule,
                nested.DxoValueAxisModule,
                nested.DxoExportModule,
                nested.DxoIndentModule,
                nested.DxoLoadingIndicatorModule,
                nested.DxoMarginModule,
                nested.DxoScaleModule,
                nested.DxoAggregationIntervalModule,
                nested.DxiBreakModule,
                nested.DxoBreakStyleModule,
                nested.DxoMarkerModule,
                nested.DxoMaxRangeModule,
                nested.DxoMinorTickModule,
                nested.DxoMinorTickIntervalModule,
                nested.DxoMinRangeModule,
                nested.DxoTickModule,
                nested.DxoTickIntervalModule,
                nested.DxoShutterModule,
                nested.DxoSizeModule,
                nested.DxoSliderHandleModule,
                nested.DxoSliderMarkerModule,
                nested.DxoTitleModule,
                nested.DxoSubtitleModule,
                i1.DxTemplateModule] });
    })();

    /**
     * Generated bundle index. Do not edit.
     */

    exports.DxRangeSelectorComponent = DxRangeSelectorComponent;
    exports.DxRangeSelectorModule = DxRangeSelectorModule;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=devextreme-angular-ui-range-selector.umd.js.map
