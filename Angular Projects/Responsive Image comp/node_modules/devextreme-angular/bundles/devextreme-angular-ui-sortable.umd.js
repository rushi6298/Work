(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/platform-browser'), require('@angular/core'), require('devextreme/ui/sortable'), require('devextreme-angular/core'), require('devextreme-angular/ui/nested')) :
    typeof define === 'function' && define.amd ? define('devextreme-angular/ui/sortable', ['exports', '@angular/platform-browser', '@angular/core', 'devextreme/ui/sortable', 'devextreme-angular/core', 'devextreme-angular/ui/nested'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["devextreme-angular"] = global["devextreme-angular"] || {}, global["devextreme-angular"].ui = global["devextreme-angular"].ui || {}, global["devextreme-angular"].ui.sortable = {}), global.ng.platformBrowser, global.ng.core, global.DxSortable, global["devextreme-angular"].core, global["devextreme-angular"].ui.nested));
})(this, (function (exports, i2, i0, DxSortable, i1, nested) { 'use strict';

    function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var DxSortable__default = /*#__PURE__*/_interopDefaultLegacy(DxSortable);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (b.hasOwnProperty(p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    function __createBinding(o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    }
    function __exportStar(m, exports) {
        for (var p in m)
            if (p !== "default" && !exports.hasOwnProperty(p))
                exports[p] = m[p];
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    ;
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (Object.hasOwnProperty.call(mod, k))
                    result[k] = mod[k];
        result.default = mod;
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, privateMap) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to get private field on non-instance");
        }
        return privateMap.get(receiver);
    }
    function __classPrivateFieldSet(receiver, privateMap, value) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to set private field on non-instance");
        }
        privateMap.set(receiver, value);
        return value;
    }

    var _c0 = ["*"];
    /**
     * Sortable is a user interface utility that allows a UI component&apos;s items to be reordered via drag and drop gestures.

     */
    var DxSortableComponent = /** @class */ (function (_super) {
        __extends(DxSortableComponent, _super);
        function DxSortableComponent(elementRef, ngZone, templateHost, _watcherHelper, optionHost, transferState, platformId) {
            var _this = _super.call(this, elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId) || this;
            _this._createEventEmitters([
                { subscribe: 'add', emit: 'onAdd' },
                { subscribe: 'disposing', emit: 'onDisposing' },
                { subscribe: 'dragChange', emit: 'onDragChange' },
                { subscribe: 'dragEnd', emit: 'onDragEnd' },
                { subscribe: 'dragMove', emit: 'onDragMove' },
                { subscribe: 'dragStart', emit: 'onDragStart' },
                { subscribe: 'initialized', emit: 'onInitialized' },
                { subscribe: 'optionChanged', emit: 'onOptionChanged' },
                { subscribe: 'remove', emit: 'onRemove' },
                { subscribe: 'reorder', emit: 'onReorder' },
                { emit: 'allowDropInsideItemChange' },
                { emit: 'allowReorderingChange' },
                { emit: 'autoScrollChange' },
                { emit: 'boundaryChange' },
                { emit: 'containerChange' },
                { emit: 'cursorOffsetChange' },
                { emit: 'dataChange' },
                { emit: 'dragDirectionChange' },
                { emit: 'dragTemplateChange' },
                { emit: 'dropFeedbackModeChange' },
                { emit: 'elementAttrChange' },
                { emit: 'filterChange' },
                { emit: 'groupChange' },
                { emit: 'handleChange' },
                { emit: 'heightChange' },
                { emit: 'itemOrientationChange' },
                { emit: 'moveItemOnDropChange' },
                { emit: 'rtlEnabledChange' },
                { emit: 'scrollSensitivityChange' },
                { emit: 'scrollSpeedChange' },
                { emit: 'widthChange' }
            ]);
            optionHost.setHost(_this);
            return _this;
        }
        Object.defineProperty(DxSortableComponent.prototype, "allowDropInsideItem", {
            /**
             * Allows a user to drop an item inside another item.
            
             */
            get: function () {
                return this._getOption('allowDropInsideItem');
            },
            set: function (value) {
                this._setOption('allowDropInsideItem', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxSortableComponent.prototype, "allowReordering", {
            /**
             * Allows a user to reorder sortable items.
            
             */
            get: function () {
                return this._getOption('allowReordering');
            },
            set: function (value) {
                this._setOption('allowReordering', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxSortableComponent.prototype, "autoScroll", {
            /**
             * Enables automatic scrolling while dragging an item beyond the viewport.
            
             */
            get: function () {
                return this._getOption('autoScroll');
            },
            set: function (value) {
                this._setOption('autoScroll', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxSortableComponent.prototype, "boundary", {
            /**
             * Specifies a DOM element that limits the dragging area.
            
             */
            get: function () {
                return this._getOption('boundary');
            },
            set: function (value) {
                this._setOption('boundary', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxSortableComponent.prototype, "container", {
            /**
             * Specifies a custom container in which the draggable item should be rendered.
            
             */
            get: function () {
                return this._getOption('container');
            },
            set: function (value) {
                this._setOption('container', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxSortableComponent.prototype, "cursorOffset", {
            /**
             * Specifies the cursor offset from the dragged item.
            
             */
            get: function () {
                return this._getOption('cursorOffset');
            },
            set: function (value) {
                this._setOption('cursorOffset', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxSortableComponent.prototype, "data", {
            /**
             * A container for custom data.
            
             */
            get: function () {
                return this._getOption('data');
            },
            set: function (value) {
                this._setOption('data', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxSortableComponent.prototype, "dragDirection", {
            /**
             * Specifies the directions in which an item can be dragged.
            
             */
            get: function () {
                return this._getOption('dragDirection');
            },
            set: function (value) {
                this._setOption('dragDirection', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxSortableComponent.prototype, "dragTemplate", {
            /**
             * Specifies custom markup to be shown instead of the item being dragged.
            
             */
            get: function () {
                return this._getOption('dragTemplate');
            },
            set: function (value) {
                this._setOption('dragTemplate', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxSortableComponent.prototype, "dropFeedbackMode", {
            /**
             * Specifies how to highlight the item&apos;s drop position.
            
             */
            get: function () {
                return this._getOption('dropFeedbackMode');
            },
            set: function (value) {
                this._setOption('dropFeedbackMode', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxSortableComponent.prototype, "elementAttr", {
            /**
             * Specifies the global attributes to be attached to the UI component&apos;s container element.
            
             */
            get: function () {
                return this._getOption('elementAttr');
            },
            set: function (value) {
                this._setOption('elementAttr', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxSortableComponent.prototype, "filter", {
            /**
             * Specifies a CSS selector for the items that can be dragged.
            
             */
            get: function () {
                return this._getOption('filter');
            },
            set: function (value) {
                this._setOption('filter', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxSortableComponent.prototype, "group", {
            /**
             * Allows you to group several UI components, so that users can drag and drop items between them.
            
             */
            get: function () {
                return this._getOption('group');
            },
            set: function (value) {
                this._setOption('group', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxSortableComponent.prototype, "handle", {
            /**
             * Specifies a CSS selector (ID or class) that should act as the drag handle(s) for the item(s).
            
             */
            get: function () {
                return this._getOption('handle');
            },
            set: function (value) {
                this._setOption('handle', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxSortableComponent.prototype, "height", {
            /**
             * Specifies the UI component&apos;s height.
            
             */
            get: function () {
                return this._getOption('height');
            },
            set: function (value) {
                this._setOption('height', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxSortableComponent.prototype, "itemOrientation", {
            /**
             * Notifies the UI component of the items&apos; orientation.
            
             */
            get: function () {
                return this._getOption('itemOrientation');
            },
            set: function (value) {
                this._setOption('itemOrientation', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxSortableComponent.prototype, "moveItemOnDrop", {
            /**
             * Moves an element in the HTML markup when it is dropped.
            
             */
            get: function () {
                return this._getOption('moveItemOnDrop');
            },
            set: function (value) {
                this._setOption('moveItemOnDrop', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxSortableComponent.prototype, "rtlEnabled", {
            /**
             * Switches the UI component to a right-to-left representation.
            
             */
            get: function () {
                return this._getOption('rtlEnabled');
            },
            set: function (value) {
                this._setOption('rtlEnabled', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxSortableComponent.prototype, "scrollSensitivity", {
            /**
             * Specifies the distance in pixels from the edge of viewport at which scrolling should start. Applies only if autoScroll is true.
            
             */
            get: function () {
                return this._getOption('scrollSensitivity');
            },
            set: function (value) {
                this._setOption('scrollSensitivity', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxSortableComponent.prototype, "scrollSpeed", {
            /**
             * Specifies the scrolling speed when dragging an item beyond the viewport. Applies only if autoScroll is true.
            
             */
            get: function () {
                return this._getOption('scrollSpeed');
            },
            set: function (value) {
                this._setOption('scrollSpeed', value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DxSortableComponent.prototype, "width", {
            /**
             * Specifies the UI component&apos;s width.
            
             */
            get: function () {
                return this._getOption('width');
            },
            set: function (value) {
                this._setOption('width', value);
            },
            enumerable: false,
            configurable: true
        });
        DxSortableComponent.prototype._createInstance = function (element, options) {
            return new DxSortable__default["default"](element, options);
        };
        DxSortableComponent.prototype.ngOnDestroy = function () {
            this._destroyWidget();
        };
        return DxSortableComponent;
    }(i1.DxComponent));
    /** @nocollapse */ DxSortableComponent.ɵfac = function DxSortableComponent_Factory(t) { return new (t || DxSortableComponent)(i0__namespace.ɵɵdirectiveInject(i0__namespace.ElementRef), i0__namespace.ɵɵdirectiveInject(i0__namespace.NgZone), i0__namespace.ɵɵdirectiveInject(i1__namespace.DxTemplateHost), i0__namespace.ɵɵdirectiveInject(i1__namespace.WatcherHelper), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost), i0__namespace.ɵɵdirectiveInject(i2__namespace.TransferState), i0__namespace.ɵɵdirectiveInject(i0.PLATFORM_ID)); };
    /** @nocollapse */ DxSortableComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxSortableComponent, selectors: [["dx-sortable"]], inputs: { allowDropInsideItem: "allowDropInsideItem", allowReordering: "allowReordering", autoScroll: "autoScroll", boundary: "boundary", container: "container", cursorOffset: "cursorOffset", data: "data", dragDirection: "dragDirection", dragTemplate: "dragTemplate", dropFeedbackMode: "dropFeedbackMode", elementAttr: "elementAttr", filter: "filter", group: "group", handle: "handle", height: "height", itemOrientation: "itemOrientation", moveItemOnDrop: "moveItemOnDrop", rtlEnabled: "rtlEnabled", scrollSensitivity: "scrollSensitivity", scrollSpeed: "scrollSpeed", width: "width" }, outputs: { onAdd: "onAdd", onDisposing: "onDisposing", onDragChange: "onDragChange", onDragEnd: "onDragEnd", onDragMove: "onDragMove", onDragStart: "onDragStart", onInitialized: "onInitialized", onOptionChanged: "onOptionChanged", onRemove: "onRemove", onReorder: "onReorder", allowDropInsideItemChange: "allowDropInsideItemChange", allowReorderingChange: "allowReorderingChange", autoScrollChange: "autoScrollChange", boundaryChange: "boundaryChange", containerChange: "containerChange", cursorOffsetChange: "cursorOffsetChange", dataChange: "dataChange", dragDirectionChange: "dragDirectionChange", dragTemplateChange: "dragTemplateChange", dropFeedbackModeChange: "dropFeedbackModeChange", elementAttrChange: "elementAttrChange", filterChange: "filterChange", groupChange: "groupChange", handleChange: "handleChange", heightChange: "heightChange", itemOrientationChange: "itemOrientationChange", moveItemOnDropChange: "moveItemOnDropChange", rtlEnabledChange: "rtlEnabledChange", scrollSensitivityChange: "scrollSensitivityChange", scrollSpeedChange: "scrollSpeedChange", widthChange: "widthChange" }, features: [i0__namespace.ɵɵProvidersFeature([
                i1.DxTemplateHost,
                i1.WatcherHelper,
                i1.NestedOptionHost
            ]), i0__namespace.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function DxSortableComponent_Template(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵprojectionDef();
                i0__namespace.ɵɵprojection(0);
            }
        }, encapsulation: 2 });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxSortableComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'dx-sortable',
                        template: '<ng-content></ng-content>',
                        providers: [
                            i1.DxTemplateHost,
                            i1.WatcherHelper,
                            i1.NestedOptionHost
                        ]
                    }]
            }], function () {
            return [{ type: i0__namespace.ElementRef }, { type: i0__namespace.NgZone }, { type: i1__namespace.DxTemplateHost }, { type: i1__namespace.WatcherHelper }, { type: i1__namespace.NestedOptionHost }, { type: i2__namespace.TransferState }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i0.PLATFORM_ID]
                        }] }];
        }, { allowDropInsideItem: [{
                    type: i0.Input
                }], allowReordering: [{
                    type: i0.Input
                }], autoScroll: [{
                    type: i0.Input
                }], boundary: [{
                    type: i0.Input
                }], container: [{
                    type: i0.Input
                }], cursorOffset: [{
                    type: i0.Input
                }], data: [{
                    type: i0.Input
                }], dragDirection: [{
                    type: i0.Input
                }], dragTemplate: [{
                    type: i0.Input
                }], dropFeedbackMode: [{
                    type: i0.Input
                }], elementAttr: [{
                    type: i0.Input
                }], filter: [{
                    type: i0.Input
                }], group: [{
                    type: i0.Input
                }], handle: [{
                    type: i0.Input
                }], height: [{
                    type: i0.Input
                }], itemOrientation: [{
                    type: i0.Input
                }], moveItemOnDrop: [{
                    type: i0.Input
                }], rtlEnabled: [{
                    type: i0.Input
                }], scrollSensitivity: [{
                    type: i0.Input
                }], scrollSpeed: [{
                    type: i0.Input
                }], width: [{
                    type: i0.Input
                }], onAdd: [{
                    type: i0.Output
                }], onDisposing: [{
                    type: i0.Output
                }], onDragChange: [{
                    type: i0.Output
                }], onDragEnd: [{
                    type: i0.Output
                }], onDragMove: [{
                    type: i0.Output
                }], onDragStart: [{
                    type: i0.Output
                }], onInitialized: [{
                    type: i0.Output
                }], onOptionChanged: [{
                    type: i0.Output
                }], onRemove: [{
                    type: i0.Output
                }], onReorder: [{
                    type: i0.Output
                }], allowDropInsideItemChange: [{
                    type: i0.Output
                }], allowReorderingChange: [{
                    type: i0.Output
                }], autoScrollChange: [{
                    type: i0.Output
                }], boundaryChange: [{
                    type: i0.Output
                }], containerChange: [{
                    type: i0.Output
                }], cursorOffsetChange: [{
                    type: i0.Output
                }], dataChange: [{
                    type: i0.Output
                }], dragDirectionChange: [{
                    type: i0.Output
                }], dragTemplateChange: [{
                    type: i0.Output
                }], dropFeedbackModeChange: [{
                    type: i0.Output
                }], elementAttrChange: [{
                    type: i0.Output
                }], filterChange: [{
                    type: i0.Output
                }], groupChange: [{
                    type: i0.Output
                }], handleChange: [{
                    type: i0.Output
                }], heightChange: [{
                    type: i0.Output
                }], itemOrientationChange: [{
                    type: i0.Output
                }], moveItemOnDropChange: [{
                    type: i0.Output
                }], rtlEnabledChange: [{
                    type: i0.Output
                }], scrollSensitivityChange: [{
                    type: i0.Output
                }], scrollSpeedChange: [{
                    type: i0.Output
                }], widthChange: [{
                    type: i0.Output
                }] });
    })();
    var DxSortableModule = /** @class */ (function () {
        function DxSortableModule() {
        }
        return DxSortableModule;
    }());
    /** @nocollapse */ DxSortableModule.ɵfac = function DxSortableModule_Factory(t) { return new (t || DxSortableModule)(); };
    /** @nocollapse */ DxSortableModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxSortableModule });
    /** @nocollapse */ DxSortableModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({ imports: [[
                nested.DxoCursorOffsetModule,
                i1.DxIntegrationModule,
                i1.DxTemplateModule,
                i2.BrowserTransferStateModule
            ], nested.DxoCursorOffsetModule,
            i1.DxTemplateModule] });
    (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxSortableModule, [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            nested.DxoCursorOffsetModule,
                            i1.DxIntegrationModule,
                            i1.DxTemplateModule,
                            i2.BrowserTransferStateModule
                        ],
                        declarations: [
                            DxSortableComponent
                        ],
                        exports: [
                            DxSortableComponent,
                            nested.DxoCursorOffsetModule,
                            i1.DxTemplateModule
                        ]
                    }]
            }], null, null);
    })();
    (function () {
        (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxSortableModule, { declarations: [DxSortableComponent], imports: [nested.DxoCursorOffsetModule,
                i1.DxIntegrationModule,
                i1.DxTemplateModule,
                i2.BrowserTransferStateModule], exports: [DxSortableComponent, nested.DxoCursorOffsetModule,
                i1.DxTemplateModule] });
    })();

    /**
     * Generated bundle index. Do not edit.
     */

    exports.DxSortableComponent = DxSortableComponent;
    exports.DxSortableModule = DxSortableModule;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=devextreme-angular-ui-sortable.umd.js.map
