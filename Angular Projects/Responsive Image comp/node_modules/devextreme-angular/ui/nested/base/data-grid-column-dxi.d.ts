/*!
 * devextreme-angular
 * Version: 22.2.13
 * Build date: Fri Aug 09 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { CollectionNestedOption } from 'devextreme-angular/core';
import DevExpress from 'devextreme/bundles/dx.all';
import { Store } from 'devextreme/data';
import { Options as DataSourceOptions } from 'devextreme/data/data_source';
import { Format } from 'devextreme/localization';
import { dxFormSimpleItem } from 'devextreme/ui/form';
import * as i0 from "@angular/core";
export declare abstract class DxiDataGridColumn extends CollectionNestedOption {
    get alignment(): string | undefined;
    set alignment(value: string | undefined);
    get allowEditing(): boolean;
    set allowEditing(value: boolean);
    get allowExporting(): boolean;
    set allowExporting(value: boolean);
    get allowFiltering(): boolean;
    set allowFiltering(value: boolean);
    get allowFixing(): boolean;
    set allowFixing(value: boolean);
    get allowGrouping(): boolean;
    set allowGrouping(value: boolean);
    get allowHeaderFiltering(): boolean;
    set allowHeaderFiltering(value: boolean);
    get allowHiding(): boolean;
    set allowHiding(value: boolean);
    get allowReordering(): boolean;
    set allowReordering(value: boolean);
    get allowResizing(): boolean;
    set allowResizing(value: boolean);
    get allowSearch(): boolean;
    set allowSearch(value: boolean);
    get allowSorting(): boolean;
    set allowSorting(value: boolean);
    get autoExpandGroup(): boolean;
    set autoExpandGroup(value: boolean);
    get buttons(): Array<string | DevExpress.ui.dxDataGridColumnButton | DevExpress.ui.dxTreeListColumnButton>;
    set buttons(value: Array<string | DevExpress.ui.dxDataGridColumnButton | DevExpress.ui.dxTreeListColumnButton>);
    get calculateCellValue(): Function;
    set calculateCellValue(value: Function);
    get calculateDisplayValue(): Function | string;
    set calculateDisplayValue(value: Function | string);
    get calculateFilterExpression(): Function;
    set calculateFilterExpression(value: Function);
    get calculateGroupValue(): Function | string;
    set calculateGroupValue(value: Function | string);
    get calculateSortValue(): Function | string;
    set calculateSortValue(value: Function | string);
    get caption(): string | undefined;
    set caption(value: string | undefined);
    get cellTemplate(): any;
    set cellTemplate(value: any);
    get columns(): Array<DevExpress.ui.dxDataGridColumn | string | DevExpress.ui.dxTreeListColumn>;
    set columns(value: Array<DevExpress.ui.dxDataGridColumn | string | DevExpress.ui.dxTreeListColumn>);
    get cssClass(): string | undefined;
    set cssClass(value: string | undefined);
    get customizeText(): Function;
    set customizeText(value: Function);
    get dataField(): string | undefined;
    set dataField(value: string | undefined);
    get dataType(): string | undefined;
    set dataType(value: string | undefined);
    get editCellTemplate(): any;
    set editCellTemplate(value: any);
    get editorOptions(): any;
    set editorOptions(value: any);
    get encodeHtml(): boolean;
    set encodeHtml(value: boolean);
    get falseText(): string;
    set falseText(value: string);
    get filterOperations(): Array<string>;
    set filterOperations(value: Array<string>);
    get filterType(): string;
    set filterType(value: string);
    get filterValue(): any | undefined;
    set filterValue(value: any | undefined);
    get filterValues(): Array<any>;
    set filterValues(value: Array<any>);
    get fixed(): boolean;
    set fixed(value: boolean);
    get fixedPosition(): string | undefined;
    set fixedPosition(value: string | undefined);
    get format(): Format | string;
    set format(value: Format | string);
    get formItem(): dxFormSimpleItem;
    set formItem(value: dxFormSimpleItem);
    get groupCellTemplate(): any;
    set groupCellTemplate(value: any);
    get groupIndex(): number | undefined;
    set groupIndex(value: number | undefined);
    get headerCellTemplate(): any;
    set headerCellTemplate(value: any);
    get headerFilter(): {
        allowSearch?: boolean;
        dataSource?: DataSourceOptions | Store | Function | null | undefined | Array<any>;
        groupInterval?: number | string | undefined;
        height?: number | undefined;
        searchMode?: string;
        width?: number | undefined;
    };
    set headerFilter(value: {
        allowSearch?: boolean;
        dataSource?: DataSourceOptions | Store | Function | null | undefined | Array<any>;
        groupInterval?: number | string | undefined;
        height?: number | undefined;
        searchMode?: string;
        width?: number | undefined;
    });
    get hidingPriority(): number | undefined;
    set hidingPriority(value: number | undefined);
    get isBand(): boolean | undefined;
    set isBand(value: boolean | undefined);
    get lookup(): {
        allowClearing?: boolean;
        calculateCellValue?: Function;
        dataSource?: DataSourceOptions | Store | Function | null | undefined | Array<any>;
        displayExpr?: Function | string | undefined;
        valueExpr?: string | undefined;
    };
    set lookup(value: {
        allowClearing?: boolean;
        calculateCellValue?: Function;
        dataSource?: DataSourceOptions | Store | Function | null | undefined | Array<any>;
        displayExpr?: Function | string | undefined;
        valueExpr?: string | undefined;
    });
    get minWidth(): number | undefined;
    set minWidth(value: number | undefined);
    get name(): string | undefined;
    set name(value: string | undefined);
    get ownerBand(): number | undefined;
    set ownerBand(value: number | undefined);
    get renderAsync(): boolean;
    set renderAsync(value: boolean);
    get selectedFilterOperation(): string | undefined;
    set selectedFilterOperation(value: string | undefined);
    get setCellValue(): Function;
    set setCellValue(value: Function);
    get showEditorAlways(): boolean;
    set showEditorAlways(value: boolean);
    get showInColumnChooser(): boolean;
    set showInColumnChooser(value: boolean);
    get showWhenGrouped(): boolean;
    set showWhenGrouped(value: boolean);
    get sortIndex(): number | undefined;
    set sortIndex(value: number | undefined);
    get sortingMethod(): Function | undefined;
    set sortingMethod(value: Function | undefined);
    get sortOrder(): string | undefined;
    set sortOrder(value: string | undefined);
    get trueText(): string;
    set trueText(value: string);
    get type(): string;
    set type(value: string);
    get validationRules(): Array<DevExpress.common.RequiredRule | DevExpress.common.NumericRule | DevExpress.common.RangeRule | DevExpress.common.StringLengthRule | DevExpress.common.CustomRule | DevExpress.common.CompareRule | DevExpress.common.PatternRule | DevExpress.common.EmailRule | DevExpress.common.AsyncRule>;
    set validationRules(value: Array<DevExpress.common.RequiredRule | DevExpress.common.NumericRule | DevExpress.common.RangeRule | DevExpress.common.StringLengthRule | DevExpress.common.CustomRule | DevExpress.common.CompareRule | DevExpress.common.PatternRule | DevExpress.common.EmailRule | DevExpress.common.AsyncRule>);
    get visible(): boolean;
    set visible(value: boolean);
    get visibleIndex(): number | undefined;
    set visibleIndex(value: number | undefined);
    get width(): number | string | undefined;
    set width(value: number | string | undefined);
    static ɵfac: i0.ɵɵFactoryDeclaration<DxiDataGridColumn, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxiDataGridColumn, "ng-component", never, {}, {}, never, never>;
}
