/*!
 * devextreme-angular
 * Version: 22.2.13
 * Build date: Fri Aug 09 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { NestedOption } from 'devextreme-angular/core';
import DevExpress from 'devextreme/bundles/dx.all';
import * as i0 from "@angular/core";
export declare abstract class DxoFilterBuilderOptions extends NestedOption {
    get accessKey(): string | undefined;
    set accessKey(value: string | undefined);
    get activeStateEnabled(): boolean;
    set activeStateEnabled(value: boolean);
    get allowHierarchicalFields(): boolean;
    set allowHierarchicalFields(value: boolean);
    get customOperations(): Array<DevExpress.ui.dxFilterBuilderCustomOperation>;
    set customOperations(value: Array<DevExpress.ui.dxFilterBuilderCustomOperation>);
    get disabled(): boolean;
    set disabled(value: boolean);
    get elementAttr(): any;
    set elementAttr(value: any);
    get fields(): Array<DevExpress.ui.dxFilterBuilderField>;
    set fields(value: Array<DevExpress.ui.dxFilterBuilderField>);
    get filterOperationDescriptions(): {
        between?: string;
        contains?: string;
        endsWith?: string;
        equal?: string;
        greaterThan?: string;
        greaterThanOrEqual?: string;
        isBlank?: string;
        isNotBlank?: string;
        lessThan?: string;
        lessThanOrEqual?: string;
        notContains?: string;
        notEqual?: string;
        startsWith?: string;
    };
    set filterOperationDescriptions(value: {
        between?: string;
        contains?: string;
        endsWith?: string;
        equal?: string;
        greaterThan?: string;
        greaterThanOrEqual?: string;
        isBlank?: string;
        isNotBlank?: string;
        lessThan?: string;
        lessThanOrEqual?: string;
        notContains?: string;
        notEqual?: string;
        startsWith?: string;
    });
    get focusStateEnabled(): boolean;
    set focusStateEnabled(value: boolean);
    get groupOperationDescriptions(): {
        and?: string;
        notAnd?: string;
        notOr?: string;
        or?: string;
    };
    set groupOperationDescriptions(value: {
        and?: string;
        notAnd?: string;
        notOr?: string;
        or?: string;
    });
    get groupOperations(): Array<string>;
    set groupOperations(value: Array<string>);
    get height(): number | Function | string | undefined;
    set height(value: number | Function | string | undefined);
    get hint(): string | undefined;
    set hint(value: string | undefined);
    get hoverStateEnabled(): boolean;
    set hoverStateEnabled(value: boolean);
    get maxGroupLevel(): number | undefined;
    set maxGroupLevel(value: number | undefined);
    get onContentReady(): Function;
    set onContentReady(value: Function);
    get onDisposing(): Function;
    set onDisposing(value: Function);
    get onEditorPrepared(): Function;
    set onEditorPrepared(value: Function);
    get onEditorPreparing(): Function;
    set onEditorPreparing(value: Function);
    get onInitialized(): Function;
    set onInitialized(value: Function);
    get onOptionChanged(): Function;
    set onOptionChanged(value: Function);
    get onValueChanged(): Function;
    set onValueChanged(value: Function);
    get rtlEnabled(): boolean;
    set rtlEnabled(value: boolean);
    get tabIndex(): number;
    set tabIndex(value: number);
    get value(): any;
    set value(value: any);
    get visible(): boolean;
    set visible(value: boolean);
    get width(): number | Function | string | undefined;
    set width(value: number | Function | string | undefined);
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoFilterBuilderOptions, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxoFilterBuilderOptions, "ng-component", never, {}, {}, never, never>;
}
