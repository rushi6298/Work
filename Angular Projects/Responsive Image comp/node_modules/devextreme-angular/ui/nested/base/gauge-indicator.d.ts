/*!
 * devextreme-angular
 * Version: 22.2.13
 * Build date: Fri Aug 09 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { NestedOption } from 'devextreme-angular/core';
import { Format } from 'devextreme/localization';
import { Font } from 'devextreme/viz/core/base_widget';
import * as i0 from "@angular/core";
export declare abstract class DxoGaugeIndicator extends NestedOption {
    get arrowLength(): number;
    set arrowLength(value: number);
    get backgroundColor(): string;
    set backgroundColor(value: string);
    get baseValue(): number | undefined;
    set baseValue(value: number | undefined);
    get beginAdaptingAtRadius(): number;
    set beginAdaptingAtRadius(value: number);
    get color(): string;
    set color(value: string);
    get horizontalOrientation(): string;
    set horizontalOrientation(value: string);
    get indentFromCenter(): number;
    set indentFromCenter(value: number);
    get length(): number;
    set length(value: number);
    get offset(): number;
    set offset(value: number);
    get palette(): string | Array<string>;
    set palette(value: string | Array<string>);
    get secondColor(): string;
    set secondColor(value: string);
    get secondFraction(): number;
    set secondFraction(value: number);
    get size(): number;
    set size(value: number);
    get spindleGapSize(): number;
    set spindleGapSize(value: number);
    get spindleSize(): number;
    set spindleSize(value: number);
    get text(): {
        customizeText?: Function | undefined;
        font?: Font;
        format?: Format | string | undefined;
        indent?: number;
    };
    set text(value: {
        customizeText?: Function | undefined;
        font?: Font;
        format?: Format | string | undefined;
        indent?: number;
    });
    get type(): string;
    set type(value: string);
    get verticalOrientation(): string;
    set verticalOrientation(value: string);
    get width(): number;
    set width(value: number);
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoGaugeIndicator, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxoGaugeIndicator, "ng-component", never, {}, {}, never, never>;
}
