/*!
 * devextreme-angular
 * Version: 22.2.13
 * Build date: Fri Aug 09 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { NestedOption } from 'devextreme-angular/core';
import DevExpress from 'devextreme/bundles/dx.all';
import { Store } from 'devextreme/data';
import DataSource, { Options as DataSourceOptions } from 'devextreme/data/data_source';
import * as i0 from "@angular/core";
export declare abstract class DxoTabPanelOptions extends NestedOption {
    get accessKey(): string | undefined;
    set accessKey(value: string | undefined);
    get activeStateEnabled(): boolean;
    set activeStateEnabled(value: boolean);
    get animationEnabled(): boolean;
    set animationEnabled(value: boolean);
    get dataSource(): DataSource | DataSourceOptions | Store | null | string | Array<string | DevExpress.ui.dxTabPanelItem | any>;
    set dataSource(value: DataSource | DataSourceOptions | Store | null | string | Array<string | DevExpress.ui.dxTabPanelItem | any>);
    get deferRendering(): boolean;
    set deferRendering(value: boolean);
    get disabled(): boolean;
    set disabled(value: boolean);
    get elementAttr(): any;
    set elementAttr(value: any);
    get focusStateEnabled(): boolean;
    set focusStateEnabled(value: boolean);
    get height(): number | Function | string | undefined;
    set height(value: number | Function | string | undefined);
    get hint(): string | undefined;
    set hint(value: string | undefined);
    get hoverStateEnabled(): boolean;
    set hoverStateEnabled(value: boolean);
    get itemHoldTimeout(): number;
    set itemHoldTimeout(value: number);
    get items(): Array<string | any | {
        badge?: string;
        disabled?: boolean;
        html?: string;
        icon?: string;
        tabTemplate?: any;
        template?: any;
        text?: string;
        title?: string;
    }>;
    set items(value: Array<string | any | {
        badge?: string;
        disabled?: boolean;
        html?: string;
        icon?: string;
        tabTemplate?: any;
        template?: any;
        text?: string;
        title?: string;
    }>);
    get itemTemplate(): any;
    set itemTemplate(value: any);
    get itemTitleTemplate(): any;
    set itemTitleTemplate(value: any);
    get loop(): boolean;
    set loop(value: boolean);
    get noDataText(): string;
    set noDataText(value: string);
    get onContentReady(): Function;
    set onContentReady(value: Function);
    get onDisposing(): Function;
    set onDisposing(value: Function);
    get onInitialized(): Function;
    set onInitialized(value: Function);
    get onItemClick(): Function;
    set onItemClick(value: Function);
    get onItemContextMenu(): Function;
    set onItemContextMenu(value: Function);
    get onItemHold(): Function;
    set onItemHold(value: Function);
    get onItemRendered(): Function;
    set onItemRendered(value: Function);
    get onOptionChanged(): Function;
    set onOptionChanged(value: Function);
    get onSelectionChanged(): Function;
    set onSelectionChanged(value: Function);
    get onTitleClick(): Function;
    set onTitleClick(value: Function);
    get onTitleHold(): Function;
    set onTitleHold(value: Function);
    get onTitleRendered(): Function;
    set onTitleRendered(value: Function);
    get repaintChangesOnly(): boolean;
    set repaintChangesOnly(value: boolean);
    get rtlEnabled(): boolean;
    set rtlEnabled(value: boolean);
    get scrollByContent(): boolean;
    set scrollByContent(value: boolean);
    get scrollingEnabled(): boolean;
    set scrollingEnabled(value: boolean);
    get selectedIndex(): number;
    set selectedIndex(value: number);
    get selectedItem(): any;
    set selectedItem(value: any);
    get showNavButtons(): boolean;
    set showNavButtons(value: boolean);
    get swipeEnabled(): boolean;
    set swipeEnabled(value: boolean);
    get tabIndex(): number;
    set tabIndex(value: number);
    get visible(): boolean;
    set visible(value: boolean);
    get width(): number | Function | string | undefined;
    set width(value: number | Function | string | undefined);
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoTabPanelOptions, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxoTabPanelOptions, "ng-component", never, {}, {}, never, never>;
}
