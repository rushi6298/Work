/*!
 * devextreme-angular
 * Version: 22.2.13
 * Build date: Fri Aug 09 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { OnInit, OnDestroy } from '@angular/core';
import { NestedOptionHost } from 'devextreme-angular/core';
import { NestedOption } from 'devextreme-angular/core';
import * as i0 from "@angular/core";
export declare class DxoColorizerComponent extends NestedOption implements OnDestroy, OnInit {
    get colorCodeField(): string | undefined;
    set colorCodeField(value: string | undefined);
    get colorizeGroups(): boolean;
    set colorizeGroups(value: boolean);
    get palette(): string | Array<string>;
    set palette(value: string | Array<string>);
    get paletteExtensionMode(): string;
    set paletteExtensionMode(value: string);
    get range(): Array<number>;
    set range(value: Array<number>);
    get type(): string | undefined;
    set type(value: string | undefined);
    protected get _optionPath(): string;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoColorizerComponent, [{ host: true; skipSelf: true; }, { host: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxoColorizerComponent, "dxo-colorizer", never, { "colorCodeField": "colorCodeField"; "colorizeGroups": "colorizeGroups"; "palette": "palette"; "paletteExtensionMode": "paletteExtensionMode"; "range": "range"; "type": "type"; }, {}, never, never>;
}
export declare class DxoColorizerModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoColorizerModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<DxoColorizerModule, [typeof DxoColorizerComponent], never, [typeof DxoColorizerComponent]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<DxoColorizerModule>;
}
