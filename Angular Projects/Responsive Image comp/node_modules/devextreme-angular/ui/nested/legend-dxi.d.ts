import { Font } from 'devextreme/viz/core/base_widget';
import { NestedOptionHost } from 'devextreme-angular/core';
import { CollectionNestedOption } from 'devextreme-angular/core';
import * as i0 from "@angular/core";
export declare class DxiLegendComponent extends CollectionNestedOption {
    get backgroundColor(): string | undefined;
    set backgroundColor(value: string | undefined);
    get border(): {
        color?: string;
        cornerRadius?: number;
        dashStyle?: string;
        opacity?: number | undefined;
        visible?: boolean;
        width?: number;
    };
    set border(value: {
        color?: string;
        cornerRadius?: number;
        dashStyle?: string;
        opacity?: number | undefined;
        visible?: boolean;
        width?: number;
    });
    get columnCount(): number;
    set columnCount(value: number);
    get columnItemSpacing(): number;
    set columnItemSpacing(value: number);
    get customizeHint(): Function;
    set customizeHint(value: Function);
    get customizeItems(): Function;
    set customizeItems(value: Function);
    get customizeText(): Function;
    set customizeText(value: Function);
    get font(): Font;
    set font(value: Font);
    get horizontalAlignment(): string;
    set horizontalAlignment(value: string);
    get itemsAlignment(): string | undefined;
    set itemsAlignment(value: string | undefined);
    get itemTextPosition(): string | undefined;
    set itemTextPosition(value: string | undefined);
    get margin(): number | {
        bottom?: number;
        left?: number;
        right?: number;
        top?: number;
    };
    set margin(value: number | {
        bottom?: number;
        left?: number;
        right?: number;
        top?: number;
    });
    get markerColor(): string | undefined;
    set markerColor(value: string | undefined);
    get markerShape(): string;
    set markerShape(value: string);
    get markerSize(): number;
    set markerSize(value: number);
    get markerTemplate(): any | undefined;
    set markerTemplate(value: any | undefined);
    get orientation(): string | undefined;
    set orientation(value: string | undefined);
    get paddingLeftRight(): number;
    set paddingLeftRight(value: number);
    get paddingTopBottom(): number;
    set paddingTopBottom(value: number);
    get rowCount(): number;
    set rowCount(value: number);
    get rowItemSpacing(): number;
    set rowItemSpacing(value: number);
    get source(): {
        grouping?: string;
        layer?: string;
    };
    set source(value: {
        grouping?: string;
        layer?: string;
    });
    get title(): string | {
        font?: Font;
        horizontalAlignment?: string | undefined;
        margin?: {
            bottom?: number;
            left?: number;
            right?: number;
            top?: number;
        };
        placeholderSize?: number | undefined;
        subtitle?: string | {
            font?: Font;
            offset?: number;
            text?: string;
        };
        text?: string;
        verticalAlignment?: string;
    };
    set title(value: string | {
        font?: Font;
        horizontalAlignment?: string | undefined;
        margin?: {
            bottom?: number;
            left?: number;
            right?: number;
            top?: number;
        };
        placeholderSize?: number | undefined;
        subtitle?: string | {
            font?: Font;
            offset?: number;
            text?: string;
        };
        text?: string;
        verticalAlignment?: string;
    });
    get verticalAlignment(): string;
    set verticalAlignment(value: string);
    get visible(): boolean;
    set visible(value: boolean);
    protected get _optionPath(): string;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DxiLegendComponent, [{ host: true; skipSelf: true; }, { host: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxiLegendComponent, "dxi-legend", never, { "backgroundColor": "backgroundColor"; "border": "border"; "columnCount": "columnCount"; "columnItemSpacing": "columnItemSpacing"; "customizeHint": "customizeHint"; "customizeItems": "customizeItems"; "customizeText": "customizeText"; "font": "font"; "horizontalAlignment": "horizontalAlignment"; "itemsAlignment": "itemsAlignment"; "itemTextPosition": "itemTextPosition"; "margin": "margin"; "markerColor": "markerColor"; "markerShape": "markerShape"; "markerSize": "markerSize"; "markerTemplate": "markerTemplate"; "orientation": "orientation"; "paddingLeftRight": "paddingLeftRight"; "paddingTopBottom": "paddingTopBottom"; "rowCount": "rowCount"; "rowItemSpacing": "rowItemSpacing"; "source": "source"; "title": "title"; "verticalAlignment": "verticalAlignment"; "visible": "visible"; }, {}, never, never>;
}
export declare class DxiLegendModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<DxiLegendModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<DxiLegendModule, [typeof DxiLegendComponent], never, [typeof DxiLegendComponent]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<DxiLegendModule>;
}
