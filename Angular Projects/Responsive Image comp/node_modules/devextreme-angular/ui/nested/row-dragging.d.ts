/*!
 * devextreme-angular
 * Version: 22.2.13
 * Build date: Fri Aug 09 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { OnInit, OnDestroy } from '@angular/core';
import { UserDefinedElement } from 'devextreme/core/element';
import { NestedOptionHost } from 'devextreme-angular/core';
import { NestedOption } from 'devextreme-angular/core';
import * as i0 from "@angular/core";
export declare class DxoRowDraggingComponent extends NestedOption implements OnDestroy, OnInit {
    get allowDropInsideItem(): boolean;
    set allowDropInsideItem(value: boolean);
    get allowReordering(): boolean;
    set allowReordering(value: boolean);
    get autoScroll(): boolean;
    set autoScroll(value: boolean);
    get boundary(): string | UserDefinedElement | undefined;
    set boundary(value: string | UserDefinedElement | undefined);
    get container(): string | UserDefinedElement | undefined;
    set container(value: string | UserDefinedElement | undefined);
    get cursorOffset(): string | {
        x?: number;
        y?: number;
    };
    set cursorOffset(value: string | {
        x?: number;
        y?: number;
    });
    get data(): any | undefined;
    set data(value: any | undefined);
    get dragDirection(): string;
    set dragDirection(value: string);
    get dragTemplate(): any | undefined;
    set dragTemplate(value: any | undefined);
    get dropFeedbackMode(): string;
    set dropFeedbackMode(value: string);
    get filter(): string;
    set filter(value: string);
    get group(): string | undefined;
    set group(value: string | undefined);
    get handle(): string;
    set handle(value: string);
    get onAdd(): Function;
    set onAdd(value: Function);
    get onDragChange(): Function;
    set onDragChange(value: Function);
    get onDragEnd(): Function;
    set onDragEnd(value: Function);
    get onDragMove(): Function;
    set onDragMove(value: Function);
    get onDragStart(): Function;
    set onDragStart(value: Function);
    get onRemove(): Function;
    set onRemove(value: Function);
    get onReorder(): Function;
    set onReorder(value: Function);
    get scrollSensitivity(): number;
    set scrollSensitivity(value: number);
    get scrollSpeed(): number;
    set scrollSpeed(value: number);
    get showDragIcons(): boolean;
    set showDragIcons(value: boolean);
    protected get _optionPath(): string;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoRowDraggingComponent, [{ host: true; skipSelf: true; }, { host: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxoRowDraggingComponent, "dxo-row-dragging", never, { "allowDropInsideItem": "allowDropInsideItem"; "allowReordering": "allowReordering"; "autoScroll": "autoScroll"; "boundary": "boundary"; "container": "container"; "cursorOffset": "cursorOffset"; "data": "data"; "dragDirection": "dragDirection"; "dragTemplate": "dragTemplate"; "dropFeedbackMode": "dropFeedbackMode"; "filter": "filter"; "group": "group"; "handle": "handle"; "onAdd": "onAdd"; "onDragChange": "onDragChange"; "onDragEnd": "onDragEnd"; "onDragMove": "onDragMove"; "onDragStart": "onDragStart"; "onRemove": "onRemove"; "onReorder": "onReorder"; "scrollSensitivity": "scrollSensitivity"; "scrollSpeed": "scrollSpeed"; "showDragIcons": "showDragIcons"; }, {}, never, never>;
}
export declare class DxoRowDraggingModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoRowDraggingModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<DxoRowDraggingModule, [typeof DxoRowDraggingComponent], never, [typeof DxoRowDraggingComponent]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<DxoRowDraggingModule>;
}
